
//前言
#if

:python基础教程
http://www.runoob.com/python/python-strings.html

:python qt
@软件的安装
http://www.cnblogs.com/zouzf/p/4308912.html

安装包
https://sourceforge.net/projects/pyqt/files/PyQt4/PyQt-4.11.3/


@知识储备
QListWidget的一些常用函数
QTextBrowser 常用函数
QTextEdit
http://www.kuqin.com/qtdocument/qtextedit.html#setCursorPosition

#endif

//常用函数
#if


import os
import platform
import time


#获取操作系统类型
g_is_win_platform =  False
if platform.uname()[0] == "Windows":
	g_is_win_platform =  True
	
#设置工作目录
g_old_path = ""
def SetPath():
	global g_old_path
	g_old_path = os.getcwd()
	os.chdir(os.path.split(os.path.realpath(__file__))[0] )
	
def ResetPath():
	os.chdir(g_old_path )	
	

#定时	
def test2():
	time.sleep(2)
	os.system("pause")

#参数
def test1():
	if len(sys.argv) == 1:
		os.system("pause")
		return
	str_argv_1 = sys.argv[1]


def create_new_file(str_name):
	f_ = open(str_name , "rb")
	buff_ = f_.read()
	f_.close()
	str_ = base64.b64encode(buff_)
	
	f_new = open("zhou.txt" , "w")
	f_new.write(str_)
	f_new.close()
	
	
def create_change_file(str_name , str_new_name):
	f_ = open(str_name , "r")
	buff_ = f_.read()
	f_.close()
	str_ = base64.b64decode(buff_)
	
	f_new = open(str_new_name , "wb")
	f_new.write(str_)
	f_new.close()
	

if __name__ == "__main__":
	pass
	
#endif

//下划线 和 驼峰 互转
#if

import hbb_tool

g_str_ = "huang_binbin"


#下划线转驼峰
def Change1():
	is_find = True
	new_str_ = ""
	for ch in g_str_:
		if is_find == True:
			ch = ch.upper()
		
		if ch == '_':
			is_find = True
		else:
			is_find = False
			new_str_ += ch	
	print new_str_
	return new_str_

#驼峰转下划线
def Change2():
	is_big = True
	new_str_ = ""
	for ch in g_str_:
		if ch.isupper() :
			if is_big == False:
				new_str_ += '_'
			is_big = True
		else:
			is_big = False
		
		new_str_ += ch.lower()
	print new_str_
	return new_str_			

def AutoChange():
	ch = g_str_[0:1]
	if ch.isupper() :
		return Change2()
	else:
		return Change1()
		
g_str_ = hbb_tool.GetText()		
g_str_ = AutoChange()
hbb_tool.SetText(g_str_)

#endif

//反射
#if

class ManagerServer:
	#定义基本属性
	dict_ = {}
	path_ = ''
	#定义构造方法
	def __init__(self):
		pass
		
		
class MailServer:
	#定义基本属性
	dict_ = {}
	path_ = ''
	#定义构造方法
	def __init__(self):
		pass


def g_write2file(o_server):
	pass


if __name__ == "__main__":

	for one_ in dir():
		if one_ == "__builtins__":
			break
	
		#筛选出指定类
		if one_.find("Server") >= 0:
			print one_
			one_deal = getattr(sys.modules[__name__] ,one_ )()
			g_write2file(one_deal)

#end
