// Code generated by protoc-gen-go.
// source: gs_ft.proto
// DO NOT EDIT!

package SProtoSpace

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type GameFtProtoId int32

const (
	GameFtProtoId_gs_create_battle_req_id GameFtProtoId = 100
	GameFtProtoId_gs_create_battle_ack_id GameFtProtoId = 101
)

var GameFtProtoId_name = map[int32]string{
	100: "gs_create_battle_req_id",
	101: "gs_create_battle_ack_id",
}
var GameFtProtoId_value = map[string]int32{
	"gs_create_battle_req_id": 100,
	"gs_create_battle_ack_id": 101,
}

func (x GameFtProtoId) Enum() *GameFtProtoId {
	p := new(GameFtProtoId)
	*p = x
	return p
}
func (x GameFtProtoId) String() string {
	return proto.EnumName(GameFtProtoId_name, int32(x))
}
func (x *GameFtProtoId) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(GameFtProtoId_value, data, "GameFtProtoId")
	if err != nil {
		return err
	}
	*x = GameFtProtoId(value)
	return nil
}
func (GameFtProtoId) EnumDescriptor() ([]byte, []int) { return fileDescriptor2, []int{0} }

type GsCreateBattleReq struct {
	BattleId         *uint32           `protobuf:"varint,1,req,name=battle_id" json:"battle_id,omitempty"`
	Data             *CreateBattleData `protobuf:"bytes,2,req,name=data" json:"data,omitempty"`
	XXX_unrecognized []byte            `json:"-"`
}

func (m *GsCreateBattleReq) Reset()                    { *m = GsCreateBattleReq{} }
func (m *GsCreateBattleReq) String() string            { return proto.CompactTextString(m) }
func (*GsCreateBattleReq) ProtoMessage()               {}
func (*GsCreateBattleReq) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{0} }

func (m *GsCreateBattleReq) GetBattleId() uint32 {
	if m != nil && m.BattleId != nil {
		return *m.BattleId
	}
	return 0
}

func (m *GsCreateBattleReq) GetData() *CreateBattleData {
	if m != nil {
		return m.Data
	}
	return nil
}

type GsCreateBattleAck struct {
	BattleId         *uint32 `protobuf:"varint,1,req,name=battle_id" json:"battle_id,omitempty"`
	Ret              *int32  `protobuf:"varint,2,req,name=ret" json:"ret,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *GsCreateBattleAck) Reset()                    { *m = GsCreateBattleAck{} }
func (m *GsCreateBattleAck) String() string            { return proto.CompactTextString(m) }
func (*GsCreateBattleAck) ProtoMessage()               {}
func (*GsCreateBattleAck) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{1} }

func (m *GsCreateBattleAck) GetBattleId() uint32 {
	if m != nil && m.BattleId != nil {
		return *m.BattleId
	}
	return 0
}

func (m *GsCreateBattleAck) GetRet() int32 {
	if m != nil && m.Ret != nil {
		return *m.Ret
	}
	return 0
}

func init() {
	proto.RegisterType((*GsCreateBattleReq)(nil), "SProtoSpace.gs_create_battle_req")
	proto.RegisterType((*GsCreateBattleAck)(nil), "SProtoSpace.gs_create_battle_ack")
	proto.RegisterEnum("SProtoSpace.GameFtProtoId", GameFtProtoId_name, GameFtProtoId_value)
}

func init() { proto.RegisterFile("gs_ft.proto", fileDescriptor2) }

var fileDescriptor2 = []byte{
	// 172 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0x4e, 0x2f, 0x8e, 0x4f,
	0x2b, 0xd1, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0xe2, 0x0e, 0x0e, 0x00, 0xd1, 0xc1, 0x05, 0x89,
	0xc9, 0xa9, 0x52, 0x5c, 0x49, 0x89, 0xc5, 0xa9, 0x10, 0x09, 0xa5, 0x08, 0x2e, 0x91, 0xf4, 0xe2,
	0xf8, 0xe4, 0xa2, 0xd4, 0xc4, 0x92, 0xd4, 0xf8, 0xa4, 0xc4, 0x92, 0x92, 0x9c, 0xd4, 0xf8, 0xa2,
	0xd4, 0x42, 0x21, 0x41, 0x2e, 0x4e, 0x28, 0x2f, 0x33, 0x45, 0x82, 0x51, 0x81, 0x49, 0x83, 0x57,
	0x48, 0x97, 0x8b, 0x25, 0x25, 0xb1, 0x24, 0x51, 0x82, 0x49, 0x81, 0x49, 0x83, 0xdb, 0x48, 0x5e,
	0x0f, 0xc9, 0x48, 0x3d, 0x54, 0x03, 0x40, 0xca, 0x94, 0xcc, 0xb0, 0x98, 0x9c, 0x98, 0x9c, 0x8d,
	0xcd, 0x64, 0x6e, 0x2e, 0xe6, 0xa2, 0xd4, 0x12, 0xb0, 0xc1, 0xac, 0x5a, 0x3e, 0x5c, 0x02, 0xe9,
	0x89, 0xb9, 0xa9, 0xf1, 0x69, 0x25, 0xf1, 0x60, 0x27, 0xc6, 0x67, 0xa6, 0x08, 0x49, 0x73, 0x89,
	0x63, 0x73, 0x65, 0x7c, 0x66, 0x8a, 0x00, 0x76, 0xc9, 0xc4, 0xe4, 0x6c, 0x90, 0x64, 0x2a, 0x20,
	0x00, 0x00, 0xff, 0xff, 0xa1, 0x56, 0x1a, 0x62, 0x06, 0x01, 0x00, 0x00,
}
