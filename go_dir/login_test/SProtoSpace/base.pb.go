// Code generated by protoc-gen-go.
// source: base.proto
// DO NOT EDIT!

package SProtoSpace

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type UserStatus int32

const (
	UserStatus_OFFLINE UserStatus = 0
	UserStatus_ONLINE  UserStatus = 1
)

var UserStatus_name = map[int32]string{
	0: "OFFLINE",
	1: "ONLINE",
}
var UserStatus_value = map[string]int32{
	"OFFLINE": 0,
	"ONLINE":  1,
}

func (x UserStatus) Enum() *UserStatus {
	p := new(UserStatus)
	*p = x
	return p
}
func (x UserStatus) String() string {
	return proto.EnumName(UserStatus_name, int32(x))
}
func (x *UserStatus) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(UserStatus_value, data, "UserStatus")
	if err != nil {
		return err
	}
	*x = UserStatus(value)
	return nil
}
func (UserStatus) EnumDescriptor() ([]byte, []int) { return fileDescriptor8, []int{0} }

type ECommonDefine int32

const (
	ECommonDefine_max_role_hero_size         ECommonDefine = 128
	ECommonDefine_max_role_bag_size          ECommonDefine = 2048
	ECommonDefine_max_hero_symbol_size       ECommonDefine = 6
	ECommonDefine_max_role_skill_size        ECommonDefine = 12
	ECommonDefine_max_role_friends_size      ECommonDefine = 50
	ECommonDefine_max_hero_model_size        ECommonDefine = 3
	ECommonDefine_max_daily_activity_size    ECommonDefine = 32
	ECommonDefine_max_team_heros_size        ECommonDefine = 11
	ECommonDefine_max_rs_reward_size         ECommonDefine = 10
	ECommonDefine_max_largemap_box_size      ECommonDefine = 256
	ECommonDefine_max_sevenday_activity_size ECommonDefine = 700
	ECommonDefine_max_skill_cfg_size         ECommonDefine = 3
	ECommonDefine_max_gold_num               ECommonDefine = 999999999
	ECommonDefine_max_jade_num               ECommonDefine = 999999999
)

var ECommonDefine_name = map[int32]string{
	128:  "max_role_hero_size",
	2048: "max_role_bag_size",
	6:    "max_hero_symbol_size",
	12:   "max_role_skill_size",
	50:   "max_role_friends_size",
	3:    "max_hero_model_size",
	32:   "max_daily_activity_size",
	11:   "max_team_heros_size",
	10:   "max_rs_reward_size",
	256:  "max_largemap_box_size",
	700:  "max_sevenday_activity_size",
	// Duplicate value: 3: "max_skill_cfg_size",
	999999999: "max_gold_num",
	// Duplicate value: 999999999: "max_jade_num",
}
var ECommonDefine_value = map[string]int32{
	"max_role_hero_size":         128,
	"max_role_bag_size":          2048,
	"max_hero_symbol_size":       6,
	"max_role_skill_size":        12,
	"max_role_friends_size":      50,
	"max_hero_model_size":        3,
	"max_daily_activity_size":    32,
	"max_team_heros_size":        11,
	"max_rs_reward_size":         10,
	"max_largemap_box_size":      256,
	"max_sevenday_activity_size": 700,
	"max_skill_cfg_size":         3,
	"max_gold_num":               999999999,
	"max_jade_num":               999999999,
}

func (x ECommonDefine) Enum() *ECommonDefine {
	p := new(ECommonDefine)
	*p = x
	return p
}
func (x ECommonDefine) String() string {
	return proto.EnumName(ECommonDefine_name, int32(x))
}
func (x *ECommonDefine) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(ECommonDefine_value, data, "ECommonDefine")
	if err != nil {
		return err
	}
	*x = ECommonDefine(value)
	return nil
}
func (ECommonDefine) EnumDescriptor() ([]byte, []int) { return fileDescriptor8, []int{1} }

// create player name result
type ECreateResult int32

const (
	ECreateResult_create_result_ok             ECreateResult = 0
	ECreateResult_create_result_fail           ECreateResult = 1
	ECreateResult_create_result_duplicate      ECreateResult = 2
	ECreateResult_create_result_sensitive_word ECreateResult = 3
	ECreateResult_create_result_state_error    ECreateResult = 4
)

var ECreateResult_name = map[int32]string{
	0: "create_result_ok",
	1: "create_result_fail",
	2: "create_result_duplicate",
	3: "create_result_sensitive_word",
	4: "create_result_state_error",
}
var ECreateResult_value = map[string]int32{
	"create_result_ok":             0,
	"create_result_fail":           1,
	"create_result_duplicate":      2,
	"create_result_sensitive_word": 3,
	"create_result_state_error":    4,
}

func (x ECreateResult) Enum() *ECreateResult {
	p := new(ECreateResult)
	*p = x
	return p
}
func (x ECreateResult) String() string {
	return proto.EnumName(ECreateResult_name, int32(x))
}
func (x *ECreateResult) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(ECreateResult_value, data, "ECreateResult")
	if err != nil {
		return err
	}
	*x = ECreateResult(value)
	return nil
}
func (ECreateResult) EnumDescriptor() ([]byte, []int) { return fileDescriptor8, []int{2} }

type EAreaState int32

const (
	EAreaState_AREA_STATE_GOOD        EAreaState = 1
	EAreaState_AREA_STATE_BUSY        EAreaState = 2
	EAreaState_AREA_STATE_CROWD       EAreaState = 3
	EAreaState_AREA_STATE_MAINTENANCE EAreaState = 4
)

var EAreaState_name = map[int32]string{
	1: "AREA_STATE_GOOD",
	2: "AREA_STATE_BUSY",
	3: "AREA_STATE_CROWD",
	4: "AREA_STATE_MAINTENANCE",
}
var EAreaState_value = map[string]int32{
	"AREA_STATE_GOOD":        1,
	"AREA_STATE_BUSY":        2,
	"AREA_STATE_CROWD":       3,
	"AREA_STATE_MAINTENANCE": 4,
}

func (x EAreaState) Enum() *EAreaState {
	p := new(EAreaState)
	*p = x
	return p
}
func (x EAreaState) String() string {
	return proto.EnumName(EAreaState_name, int32(x))
}
func (x *EAreaState) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(EAreaState_value, data, "EAreaState")
	if err != nil {
		return err
	}
	*x = EAreaState(value)
	return nil
}
func (EAreaState) EnumDescriptor() ([]byte, []int) { return fileDescriptor8, []int{3} }

type BaseMsgId int32

const (
	BaseMsgId_name_check_id                    BaseMsgId = 1
	BaseMsgId_name_check_ack_id                BaseMsgId = 2
	BaseMsgId_change_name_check_id             BaseMsgId = 3
	BaseMsgId_change_name_check_ack_id         BaseMsgId = 4
	BaseMsgId_player_leave_game_ntf_id         BaseMsgId = 5
	BaseMsgId_common_protocol_id               BaseMsgId = 2000
	BaseMsgId_common_protocol_forwarded_req_id BaseMsgId = 2100
	BaseMsgId_common_protocol_forwarded_ack_id BaseMsgId = 2101
)

var BaseMsgId_name = map[int32]string{
	1:    "name_check_id",
	2:    "name_check_ack_id",
	3:    "change_name_check_id",
	4:    "change_name_check_ack_id",
	5:    "player_leave_game_ntf_id",
	2000: "common_protocol_id",
	2100: "common_protocol_forwarded_req_id",
	2101: "common_protocol_forwarded_ack_id",
}
var BaseMsgId_value = map[string]int32{
	"name_check_id":                    1,
	"name_check_ack_id":                2,
	"change_name_check_id":             3,
	"change_name_check_ack_id":         4,
	"player_leave_game_ntf_id":         5,
	"common_protocol_id":               2000,
	"common_protocol_forwarded_req_id": 2100,
	"common_protocol_forwarded_ack_id": 2101,
}

func (x BaseMsgId) Enum() *BaseMsgId {
	p := new(BaseMsgId)
	*p = x
	return p
}
func (x BaseMsgId) String() string {
	return proto.EnumName(BaseMsgId_name, int32(x))
}
func (x *BaseMsgId) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(BaseMsgId_value, data, "BaseMsgId")
	if err != nil {
		return err
	}
	*x = BaseMsgId(value)
	return nil
}
func (BaseMsgId) EnumDescriptor() ([]byte, []int) { return fileDescriptor8, []int{4} }

type ECrossServerType int32

const (
	ECrossServerType_BACK_NORMAL_SERVER  ECrossServerType = 0
	ECrossServerType_CROSS_LOCAL_SERVER  ECrossServerType = 1
	ECrossServerType_CROSS_GLOBAL_SERVER ECrossServerType = 2
)

var ECrossServerType_name = map[int32]string{
	0: "BACK_NORMAL_SERVER",
	1: "CROSS_LOCAL_SERVER",
	2: "CROSS_GLOBAL_SERVER",
}
var ECrossServerType_value = map[string]int32{
	"BACK_NORMAL_SERVER":  0,
	"CROSS_LOCAL_SERVER":  1,
	"CROSS_GLOBAL_SERVER": 2,
}

func (x ECrossServerType) Enum() *ECrossServerType {
	p := new(ECrossServerType)
	*p = x
	return p
}
func (x ECrossServerType) String() string {
	return proto.EnumName(ECrossServerType_name, int32(x))
}
func (x *ECrossServerType) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(ECrossServerType_value, data, "ECrossServerType")
	if err != nil {
		return err
	}
	*x = ECrossServerType(value)
	return nil
}
func (ECrossServerType) EnumDescriptor() ([]byte, []int) { return fileDescriptor8, []int{5} }

// for award
type EAwardType int32

const (
	EAwardType_AWARD_COIN         EAwardType = 1
	EAwardType_AWARD_DIAMONDS     EAwardType = 2
	EAwardType_AWARD_CORPS_EXP    EAwardType = 3
	EAwardType_AWARD_TOY_CURRENCY EAwardType = 4
	EAwardType_AWARD_ITEM         EAwardType = 5
	EAwardType_AWARD_HERO         EAwardType = 6
	EAwardType_AWARD_ENERGY       EAwardType = 7
)

var EAwardType_name = map[int32]string{
	1: "AWARD_COIN",
	2: "AWARD_DIAMONDS",
	3: "AWARD_CORPS_EXP",
	4: "AWARD_TOY_CURRENCY",
	5: "AWARD_ITEM",
	6: "AWARD_HERO",
	7: "AWARD_ENERGY",
}
var EAwardType_value = map[string]int32{
	"AWARD_COIN":         1,
	"AWARD_DIAMONDS":     2,
	"AWARD_CORPS_EXP":    3,
	"AWARD_TOY_CURRENCY": 4,
	"AWARD_ITEM":         5,
	"AWARD_HERO":         6,
	"AWARD_ENERGY":       7,
}

func (x EAwardType) Enum() *EAwardType {
	p := new(EAwardType)
	*p = x
	return p
}
func (x EAwardType) String() string {
	return proto.EnumName(EAwardType_name, int32(x))
}
func (x *EAwardType) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(EAwardType_value, data, "EAwardType")
	if err != nil {
		return err
	}
	*x = EAwardType(value)
	return nil
}
func (EAwardType) EnumDescriptor() ([]byte, []int) { return fileDescriptor8, []int{6} }

type EToyCurrencyType int32

const (
	EToyCurrencyType_TOY_CURRENCY_ARENA       EToyCurrencyType = 1
	EToyCurrencyType_TOY_CURRENCY_EXPED       EToyCurrencyType = 2
	EToyCurrencyType_TOY_CURRENCY_MOBA        EToyCurrencyType = 3
	EToyCurrencyType_TOY_CURRENCY_SOCIETYCON  EToyCurrencyType = 4
	EToyCurrencyType_TOY_CURRENCY_SOCIETYEXP  EToyCurrencyType = 5
	EToyCurrencyType_TOY_CURRENCY_CRYSTAL     EToyCurrencyType = 6
	EToyCurrencyType_TOY_CURRENCY_VIGOUR      EToyCurrencyType = 7
	EToyCurrencyType_TOY_CURRENCY_PEERAGE_EXP EToyCurrencyType = 8
	EToyCurrencyType_TOY_CURRENCY_ZODIAC_SOUL EToyCurrencyType = 9
)

var EToyCurrencyType_name = map[int32]string{
	1: "TOY_CURRENCY_ARENA",
	2: "TOY_CURRENCY_EXPED",
	3: "TOY_CURRENCY_MOBA",
	4: "TOY_CURRENCY_SOCIETYCON",
	5: "TOY_CURRENCY_SOCIETYEXP",
	6: "TOY_CURRENCY_CRYSTAL",
	7: "TOY_CURRENCY_VIGOUR",
	8: "TOY_CURRENCY_PEERAGE_EXP",
	9: "TOY_CURRENCY_ZODIAC_SOUL",
}
var EToyCurrencyType_value = map[string]int32{
	"TOY_CURRENCY_ARENA":       1,
	"TOY_CURRENCY_EXPED":       2,
	"TOY_CURRENCY_MOBA":        3,
	"TOY_CURRENCY_SOCIETYCON":  4,
	"TOY_CURRENCY_SOCIETYEXP":  5,
	"TOY_CURRENCY_CRYSTAL":     6,
	"TOY_CURRENCY_VIGOUR":      7,
	"TOY_CURRENCY_PEERAGE_EXP": 8,
	"TOY_CURRENCY_ZODIAC_SOUL": 9,
}

func (x EToyCurrencyType) Enum() *EToyCurrencyType {
	p := new(EToyCurrencyType)
	*p = x
	return p
}
func (x EToyCurrencyType) String() string {
	return proto.EnumName(EToyCurrencyType_name, int32(x))
}
func (x *EToyCurrencyType) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(EToyCurrencyType_value, data, "EToyCurrencyType")
	if err != nil {
		return err
	}
	*x = EToyCurrencyType(value)
	return nil
}
func (EToyCurrencyType) EnumDescriptor() ([]byte, []int) { return fileDescriptor8, []int{7} }

type EOperaType int32

const (
	EOperaType_OPERA_TYPE_ADD    EOperaType = 0
	EOperaType_OPERA_TYPE_DELETE EOperaType = 1
	EOperaType_OPERA_TYPE_UPDATE EOperaType = 2
)

var EOperaType_name = map[int32]string{
	0: "OPERA_TYPE_ADD",
	1: "OPERA_TYPE_DELETE",
	2: "OPERA_TYPE_UPDATE",
}
var EOperaType_value = map[string]int32{
	"OPERA_TYPE_ADD":    0,
	"OPERA_TYPE_DELETE": 1,
	"OPERA_TYPE_UPDATE": 2,
}

func (x EOperaType) Enum() *EOperaType {
	p := new(EOperaType)
	*p = x
	return p
}
func (x EOperaType) String() string {
	return proto.EnumName(EOperaType_name, int32(x))
}
func (x *EOperaType) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(EOperaType_value, data, "EOperaType")
	if err != nil {
		return err
	}
	*x = EOperaType(value)
	return nil
}
func (EOperaType) EnumDescriptor() ([]byte, []int) { return fileDescriptor8, []int{8} }

type EKickoutReason int32

const (
	EKickoutReason_KickoutReason_login EKickoutReason = 1
)

var EKickoutReason_name = map[int32]string{
	1: "KickoutReason_login",
}
var EKickoutReason_value = map[string]int32{
	"KickoutReason_login": 1,
}

func (x EKickoutReason) Enum() *EKickoutReason {
	p := new(EKickoutReason)
	*p = x
	return p
}
func (x EKickoutReason) String() string {
	return proto.EnumName(EKickoutReason_name, int32(x))
}
func (x *EKickoutReason) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(EKickoutReason_value, data, "EKickoutReason")
	if err != nil {
		return err
	}
	*x = EKickoutReason(value)
	return nil
}
func (EKickoutReason) EnumDescriptor() ([]byte, []int) { return fileDescriptor8, []int{9} }

type EBattleType int32

const (
	EBattleType_BATTLE_TYPE_PVP EBattleType = 1
)

var EBattleType_name = map[int32]string{
	1: "BATTLE_TYPE_PVP",
}
var EBattleType_value = map[string]int32{
	"BATTLE_TYPE_PVP": 1,
}

func (x EBattleType) Enum() *EBattleType {
	p := new(EBattleType)
	*p = x
	return p
}
func (x EBattleType) String() string {
	return proto.EnumName(EBattleType_name, int32(x))
}
func (x *EBattleType) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(EBattleType_value, data, "EBattleType")
	if err != nil {
		return err
	}
	*x = EBattleType(value)
	return nil
}
func (EBattleType) EnumDescriptor() ([]byte, []int) { return fileDescriptor8, []int{10} }

type EObjType int32

const (
	EObjType_OBJ_TYPE_NONE    EObjType = 0
	EObjType_OBJ_TYPE_HERO    EObjType = 1
	EObjType_OBJ_TYPE_MONSTER EObjType = 2
)

var EObjType_name = map[int32]string{
	0: "OBJ_TYPE_NONE",
	1: "OBJ_TYPE_HERO",
	2: "OBJ_TYPE_MONSTER",
}
var EObjType_value = map[string]int32{
	"OBJ_TYPE_NONE":    0,
	"OBJ_TYPE_HERO":    1,
	"OBJ_TYPE_MONSTER": 2,
}

func (x EObjType) Enum() *EObjType {
	p := new(EObjType)
	*p = x
	return p
}
func (x EObjType) String() string {
	return proto.EnumName(EObjType_name, int32(x))
}
func (x *EObjType) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(EObjType_value, data, "EObjType")
	if err != nil {
		return err
	}
	*x = EObjType(value)
	return nil
}
func (EObjType) EnumDescriptor() ([]byte, []int) { return fileDescriptor8, []int{11} }

type EAttribute int32

const (
	EAttribute_ATTR_ATK                  EAttribute = 1
	EAttribute_ATTR_MAXHP                EAttribute = 2
	EAttribute_ATTR_DEF                  EAttribute = 3
	EAttribute_ATTR_SPEED                EAttribute = 4
	EAttribute_ATTR_CRIT                 EAttribute = 5
	EAttribute_ATTR_CRIT_DMG             EAttribute = 6
	EAttribute_ATTR_ACC                  EAttribute = 7
	EAttribute_ATTR_RES                  EAttribute = 8
	EAttribute_ATTR_DMG_UP               EAttribute = 9
	EAttribute_ATTR_DMG_DOWN             EAttribute = 10
	EAttribute_ATTR_GET_DMG_UP           EAttribute = 11
	EAttribute_ATTR_GET_DMG_DOWN         EAttribute = 12
	EAttribute_ATTR_IGNORE_DEF           EAttribute = 13
	EAttribute_ATTR_CRI_IGNORE_DEF       EAttribute = 14
	EAttribute_ATTR_TREAT_EFFECT         EAttribute = 15
	EAttribute_ATTR_GET_TREAT_EFFECT     EAttribute = 16
	EAttribute_ATTR_RESPOND              EAttribute = 17
	EAttribute_ATTR_PENETRATION          EAttribute = 18
	EAttribute_ATTR_PARRY                EAttribute = 19
	EAttribute_ATTR_MAX_POWER            EAttribute = 30
	EAttribute_ATTR_MAX_ENERGY           EAttribute = 31
	EAttribute_ATTR_CUR_HP               EAttribute = 32
	EAttribute_ATTR_ANTI_CRIT            EAttribute = 33
	EAttribute_ATTR_IGNORE_DEF_RATIO     EAttribute = 34
	EAttribute_ATTR_CRI_IGNORE_DEF_RATIO EAttribute = 35
	EAttribute_ATTR_GET_CRIT_DMG_UP      EAttribute = 36
	EAttribute_ATTR_GET_CRIT_DMG_DOWN    EAttribute = 37
)

var EAttribute_name = map[int32]string{
	1:  "ATTR_ATK",
	2:  "ATTR_MAXHP",
	3:  "ATTR_DEF",
	4:  "ATTR_SPEED",
	5:  "ATTR_CRIT",
	6:  "ATTR_CRIT_DMG",
	7:  "ATTR_ACC",
	8:  "ATTR_RES",
	9:  "ATTR_DMG_UP",
	10: "ATTR_DMG_DOWN",
	11: "ATTR_GET_DMG_UP",
	12: "ATTR_GET_DMG_DOWN",
	13: "ATTR_IGNORE_DEF",
	14: "ATTR_CRI_IGNORE_DEF",
	15: "ATTR_TREAT_EFFECT",
	16: "ATTR_GET_TREAT_EFFECT",
	17: "ATTR_RESPOND",
	18: "ATTR_PENETRATION",
	19: "ATTR_PARRY",
	30: "ATTR_MAX_POWER",
	31: "ATTR_MAX_ENERGY",
	32: "ATTR_CUR_HP",
	33: "ATTR_ANTI_CRIT",
	34: "ATTR_IGNORE_DEF_RATIO",
	35: "ATTR_CRI_IGNORE_DEF_RATIO",
	36: "ATTR_GET_CRIT_DMG_UP",
	37: "ATTR_GET_CRIT_DMG_DOWN",
}
var EAttribute_value = map[string]int32{
	"ATTR_ATK":                  1,
	"ATTR_MAXHP":                2,
	"ATTR_DEF":                  3,
	"ATTR_SPEED":                4,
	"ATTR_CRIT":                 5,
	"ATTR_CRIT_DMG":             6,
	"ATTR_ACC":                  7,
	"ATTR_RES":                  8,
	"ATTR_DMG_UP":               9,
	"ATTR_DMG_DOWN":             10,
	"ATTR_GET_DMG_UP":           11,
	"ATTR_GET_DMG_DOWN":         12,
	"ATTR_IGNORE_DEF":           13,
	"ATTR_CRI_IGNORE_DEF":       14,
	"ATTR_TREAT_EFFECT":         15,
	"ATTR_GET_TREAT_EFFECT":     16,
	"ATTR_RESPOND":              17,
	"ATTR_PENETRATION":          18,
	"ATTR_PARRY":                19,
	"ATTR_MAX_POWER":            30,
	"ATTR_MAX_ENERGY":           31,
	"ATTR_CUR_HP":               32,
	"ATTR_ANTI_CRIT":            33,
	"ATTR_IGNORE_DEF_RATIO":     34,
	"ATTR_CRI_IGNORE_DEF_RATIO": 35,
	"ATTR_GET_CRIT_DMG_UP":      36,
	"ATTR_GET_CRIT_DMG_DOWN":    37,
}

func (x EAttribute) Enum() *EAttribute {
	p := new(EAttribute)
	*p = x
	return p
}
func (x EAttribute) String() string {
	return proto.EnumName(EAttribute_name, int32(x))
}
func (x *EAttribute) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(EAttribute_value, data, "EAttribute")
	if err != nil {
		return err
	}
	*x = EAttribute(value)
	return nil
}
func (EAttribute) EnumDescriptor() ([]byte, []int) { return fileDescriptor8, []int{12} }

type EBuffFlag int32

const (
	EBuffFlag_BUFF_FLAG_DIZZY          EBuffFlag = 1
	EBuffFlag_BUFF_FLAG_SILENCE        EBuffFlag = 2
	EBuffFlag_BUFF_FLAG_IMMUNE         EBuffFlag = 3
	EBuffFlag_BUFF_FLAG_SLEEP          EBuffFlag = 4
	EBuffFlag_BUFF_FLAG_TAUNT          EBuffFlag = 5
	EBuffFlag_BUFF_FLAG_SHARE_DMG      EBuffFlag = 6
	EBuffFlag_BUFF_FLAG_SPUTTERING_DMG EBuffFlag = 7
)

var EBuffFlag_name = map[int32]string{
	1: "BUFF_FLAG_DIZZY",
	2: "BUFF_FLAG_SILENCE",
	3: "BUFF_FLAG_IMMUNE",
	4: "BUFF_FLAG_SLEEP",
	5: "BUFF_FLAG_TAUNT",
	6: "BUFF_FLAG_SHARE_DMG",
	7: "BUFF_FLAG_SPUTTERING_DMG",
}
var EBuffFlag_value = map[string]int32{
	"BUFF_FLAG_DIZZY":          1,
	"BUFF_FLAG_SILENCE":        2,
	"BUFF_FLAG_IMMUNE":         3,
	"BUFF_FLAG_SLEEP":          4,
	"BUFF_FLAG_TAUNT":          5,
	"BUFF_FLAG_SHARE_DMG":      6,
	"BUFF_FLAG_SPUTTERING_DMG": 7,
}

func (x EBuffFlag) Enum() *EBuffFlag {
	p := new(EBuffFlag)
	*p = x
	return p
}
func (x EBuffFlag) String() string {
	return proto.EnumName(EBuffFlag_name, int32(x))
}
func (x *EBuffFlag) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(EBuffFlag_value, data, "EBuffFlag")
	if err != nil {
		return err
	}
	*x = EBuffFlag(value)
	return nil
}
func (EBuffFlag) EnumDescriptor() ([]byte, []int) { return fileDescriptor8, []int{13} }

type EEffect int32

const (
	EEffect_EFF_DIZZY               EEffect = 1
	EEffect_EFF_SILENCE             EEffect = 2
	EEffect_EFF_IMMUNE              EEffect = 3
	EEffect_EFF_SLEEP               EEffect = 4
	EEffect_EFF_RESPOND_DMG         EEffect = 5
	EEffect_EFF_RECOVER_HP          EEffect = 6
	EEffect_EFF_RANDOM_TAUNT        EEffect = 7
	EEffect_EFF_TAUNT               EEffect = 8
	EEffect_EFF_SHARE_DMG           EEffect = 9
	EEffect_EFF_SPUTTERING_DMG      EEffect = 10
	EEffect_EFF_ADD_POWER_VALUE     EEffect = 11
	EEffect_EFF_ADD_POWER_POINT     EEffect = 12
	EEffect_EFF_MALE_GET_DMG_UP     EEffect = 13
	EEffect_EFF_MALE_GET_DMG_DOWN   EEffect = 14
	EEffect_EFF_FEMALE_GET_DMG_UP   EEffect = 15
	EEffect_EFF_FEMALE_GET_DMG_DOWN EEffect = 16
	EEffect_EFF_NEAR_GET_DMG_UP     EEffect = 17
	EEffect_EFF_NEAR_GET_DMG_DOWN   EEffect = 18
	EEffect_EFF_FAR_GET_DMG_UP      EEffect = 19
	EEffect_EFF_FAR_GET_DMG_DOWN    EEffect = 20
	EEffect_EFF_HERO_GET_DMG_UP     EEffect = 21
	EEffect_EFF_ADD_HP              EEffect = 22
	EEffect_EFF_ADD_ATK             EEffect = 23
	EEffect_EFF_REDUCE_ATK          EEffect = 24
	EEffect_EFF_ADD_DEF             EEffect = 25
	EEffect_EFF_REDUCE_DEF          EEffect = 26
	EEffect_EFF_ADD_CRIT            EEffect = 27
	EEffect_EFF_ADD_ANTI_CRIT       EEffect = 28
	EEffect_EFF_ADD_CRIT_DMG        EEffect = 29
	EEffect_EFF_REDUCE_CRIT_DMG     EEffect = 30
	EEffect_EFF_ADD_RES             EEffect = 31
	EEffect_EFF_REDUCE_RES          EEffect = 32
	EEffect_EFF_PENETRATION         EEffect = 33
	EEffect_EFF_PARRY               EEffect = 34
	EEffect_EFF_DMG_UP              EEffect = 35
	EEffect_EFF_DMG_DOWN            EEffect = 36
	EEffect_EFF_GET_DMG_UP          EEffect = 37
	EEffect_EFF_GET_DMG_DOWN        EEffect = 38
	EEffect_EFF_IGNORE_DEF          EEffect = 39
	EEffect_EFF_CRIT_IGNORE_DEF     EEffect = 40
	EEffect_EFF_TREAT               EEffect = 41
	EEffect_EFF_GET_TREAT           EEffect = 42
	EEffect_EFF_RESPOND             EEffect = 43
)

var EEffect_name = map[int32]string{
	1:  "EFF_DIZZY",
	2:  "EFF_SILENCE",
	3:  "EFF_IMMUNE",
	4:  "EFF_SLEEP",
	5:  "EFF_RESPOND_DMG",
	6:  "EFF_RECOVER_HP",
	7:  "EFF_RANDOM_TAUNT",
	8:  "EFF_TAUNT",
	9:  "EFF_SHARE_DMG",
	10: "EFF_SPUTTERING_DMG",
	11: "EFF_ADD_POWER_VALUE",
	12: "EFF_ADD_POWER_POINT",
	13: "EFF_MALE_GET_DMG_UP",
	14: "EFF_MALE_GET_DMG_DOWN",
	15: "EFF_FEMALE_GET_DMG_UP",
	16: "EFF_FEMALE_GET_DMG_DOWN",
	17: "EFF_NEAR_GET_DMG_UP",
	18: "EFF_NEAR_GET_DMG_DOWN",
	19: "EFF_FAR_GET_DMG_UP",
	20: "EFF_FAR_GET_DMG_DOWN",
	21: "EFF_HERO_GET_DMG_UP",
	22: "EFF_ADD_HP",
	23: "EFF_ADD_ATK",
	24: "EFF_REDUCE_ATK",
	25: "EFF_ADD_DEF",
	26: "EFF_REDUCE_DEF",
	27: "EFF_ADD_CRIT",
	28: "EFF_ADD_ANTI_CRIT",
	29: "EFF_ADD_CRIT_DMG",
	30: "EFF_REDUCE_CRIT_DMG",
	31: "EFF_ADD_RES",
	32: "EFF_REDUCE_RES",
	33: "EFF_PENETRATION",
	34: "EFF_PARRY",
	35: "EFF_DMG_UP",
	36: "EFF_DMG_DOWN",
	37: "EFF_GET_DMG_UP",
	38: "EFF_GET_DMG_DOWN",
	39: "EFF_IGNORE_DEF",
	40: "EFF_CRIT_IGNORE_DEF",
	41: "EFF_TREAT",
	42: "EFF_GET_TREAT",
	43: "EFF_RESPOND",
}
var EEffect_value = map[string]int32{
	"EFF_DIZZY":               1,
	"EFF_SILENCE":             2,
	"EFF_IMMUNE":              3,
	"EFF_SLEEP":               4,
	"EFF_RESPOND_DMG":         5,
	"EFF_RECOVER_HP":          6,
	"EFF_RANDOM_TAUNT":        7,
	"EFF_TAUNT":               8,
	"EFF_SHARE_DMG":           9,
	"EFF_SPUTTERING_DMG":      10,
	"EFF_ADD_POWER_VALUE":     11,
	"EFF_ADD_POWER_POINT":     12,
	"EFF_MALE_GET_DMG_UP":     13,
	"EFF_MALE_GET_DMG_DOWN":   14,
	"EFF_FEMALE_GET_DMG_UP":   15,
	"EFF_FEMALE_GET_DMG_DOWN": 16,
	"EFF_NEAR_GET_DMG_UP":     17,
	"EFF_NEAR_GET_DMG_DOWN":   18,
	"EFF_FAR_GET_DMG_UP":      19,
	"EFF_FAR_GET_DMG_DOWN":    20,
	"EFF_HERO_GET_DMG_UP":     21,
	"EFF_ADD_HP":              22,
	"EFF_ADD_ATK":             23,
	"EFF_REDUCE_ATK":          24,
	"EFF_ADD_DEF":             25,
	"EFF_REDUCE_DEF":          26,
	"EFF_ADD_CRIT":            27,
	"EFF_ADD_ANTI_CRIT":       28,
	"EFF_ADD_CRIT_DMG":        29,
	"EFF_REDUCE_CRIT_DMG":     30,
	"EFF_ADD_RES":             31,
	"EFF_REDUCE_RES":          32,
	"EFF_PENETRATION":         33,
	"EFF_PARRY":               34,
	"EFF_DMG_UP":              35,
	"EFF_DMG_DOWN":            36,
	"EFF_GET_DMG_UP":          37,
	"EFF_GET_DMG_DOWN":        38,
	"EFF_IGNORE_DEF":          39,
	"EFF_CRIT_IGNORE_DEF":     40,
	"EFF_TREAT":               41,
	"EFF_GET_TREAT":           42,
	"EFF_RESPOND":             43,
}

func (x EEffect) Enum() *EEffect {
	p := new(EEffect)
	*p = x
	return p
}
func (x EEffect) String() string {
	return proto.EnumName(EEffect_name, int32(x))
}
func (x *EEffect) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(EEffect_value, data, "EEffect")
	if err != nil {
		return err
	}
	*x = EEffect(value)
	return nil
}
func (EEffect) EnumDescriptor() ([]byte, []int) { return fileDescriptor8, []int{14} }

type ESkillTarget int32

const (
	ESkillTarget_ESKILL_TARGET_ENEMY        ESkillTarget = 1
	ESkillTarget_ESKILL_TARGET_FRIEND       ESkillTarget = 2
	ESkillTarget_ESKILL_TARGET_ENEMY_FRONT  ESkillTarget = 3
	ESkillTarget_ESKILL_TARGET_ENEMY_BACK   ESkillTarget = 4
	ESkillTarget_ESKILL_TARGET_ENEMY_TOP    ESkillTarget = 5
	ESkillTarget_ESKILL_TARGET_ENEMY_BOTTOM ESkillTarget = 6
)

var ESkillTarget_name = map[int32]string{
	1: "ESKILL_TARGET_ENEMY",
	2: "ESKILL_TARGET_FRIEND",
	3: "ESKILL_TARGET_ENEMY_FRONT",
	4: "ESKILL_TARGET_ENEMY_BACK",
	5: "ESKILL_TARGET_ENEMY_TOP",
	6: "ESKILL_TARGET_ENEMY_BOTTOM",
}
var ESkillTarget_value = map[string]int32{
	"ESKILL_TARGET_ENEMY":        1,
	"ESKILL_TARGET_FRIEND":       2,
	"ESKILL_TARGET_ENEMY_FRONT":  3,
	"ESKILL_TARGET_ENEMY_BACK":   4,
	"ESKILL_TARGET_ENEMY_TOP":    5,
	"ESKILL_TARGET_ENEMY_BOTTOM": 6,
}

func (x ESkillTarget) Enum() *ESkillTarget {
	p := new(ESkillTarget)
	*p = x
	return p
}
func (x ESkillTarget) String() string {
	return proto.EnumName(ESkillTarget_name, int32(x))
}
func (x *ESkillTarget) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(ESkillTarget_value, data, "ESkillTarget")
	if err != nil {
		return err
	}
	*x = ESkillTarget(value)
	return nil
}
func (ESkillTarget) EnumDescriptor() ([]byte, []int) { return fileDescriptor8, []int{15} }

type ESkillEffectType int32

const (
	ESkillEffectType_ESKILL_EFFECT_TYPE_BUFF       ESkillEffectType = 0
	ESkillEffectType_ESKILL_EFFECT_TYPE_DMG_RATIO  ESkillEffectType = 1
	ESkillEffectType_ESKILL_EFFECT_TYPE_CURE_RATIO ESkillEffectType = 2
	ESkillEffectType_ESKILL_EFFECT_TYPE_DMG_FIX    ESkillEffectType = 3
	ESkillEffectType_ESKILL_EFFECT_TYPE_CURE_FIX   ESkillEffectType = 4
)

var ESkillEffectType_name = map[int32]string{
	0: "ESKILL_EFFECT_TYPE_BUFF",
	1: "ESKILL_EFFECT_TYPE_DMG_RATIO",
	2: "ESKILL_EFFECT_TYPE_CURE_RATIO",
	3: "ESKILL_EFFECT_TYPE_DMG_FIX",
	4: "ESKILL_EFFECT_TYPE_CURE_FIX",
}
var ESkillEffectType_value = map[string]int32{
	"ESKILL_EFFECT_TYPE_BUFF":       0,
	"ESKILL_EFFECT_TYPE_DMG_RATIO":  1,
	"ESKILL_EFFECT_TYPE_CURE_RATIO": 2,
	"ESKILL_EFFECT_TYPE_DMG_FIX":    3,
	"ESKILL_EFFECT_TYPE_CURE_FIX":   4,
}

func (x ESkillEffectType) Enum() *ESkillEffectType {
	p := new(ESkillEffectType)
	*p = x
	return p
}
func (x ESkillEffectType) String() string {
	return proto.EnumName(ESkillEffectType_name, int32(x))
}
func (x *ESkillEffectType) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(ESkillEffectType_value, data, "ESkillEffectType")
	if err != nil {
		return err
	}
	*x = ESkillEffectType(value)
	return nil
}
func (ESkillEffectType) EnumDescriptor() ([]byte, []int) { return fileDescriptor8, []int{16} }

type ECampType int32

const (
	ECampType_CAMP_TYPE_0 ECampType = 0
	ECampType_CAMP_TYPE_1 ECampType = 1
)

var ECampType_name = map[int32]string{
	0: "CAMP_TYPE_0",
	1: "CAMP_TYPE_1",
}
var ECampType_value = map[string]int32{
	"CAMP_TYPE_0": 0,
	"CAMP_TYPE_1": 1,
}

func (x ECampType) Enum() *ECampType {
	p := new(ECampType)
	*p = x
	return p
}
func (x ECampType) String() string {
	return proto.EnumName(ECampType_name, int32(x))
}
func (x *ECampType) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(ECampType_value, data, "ECampType")
	if err != nil {
		return err
	}
	*x = ECampType(value)
	return nil
}
func (ECampType) EnumDescriptor() ([]byte, []int) { return fileDescriptor8, []int{17} }

type EPlayerType int32

const (
	EPlayerType_PLAYER_TYPE_NONE   EPlayerType = 0
	EPlayerType_PLAYER_TYPE_PLAYER EPlayerType = 1
	EPlayerType_PLAYER_TYPE_NPC    EPlayerType = 2
)

var EPlayerType_name = map[int32]string{
	0: "PLAYER_TYPE_NONE",
	1: "PLAYER_TYPE_PLAYER",
	2: "PLAYER_TYPE_NPC",
}
var EPlayerType_value = map[string]int32{
	"PLAYER_TYPE_NONE":   0,
	"PLAYER_TYPE_PLAYER": 1,
	"PLAYER_TYPE_NPC":    2,
}

func (x EPlayerType) Enum() *EPlayerType {
	p := new(EPlayerType)
	*p = x
	return p
}
func (x EPlayerType) String() string {
	return proto.EnumName(EPlayerType_name, int32(x))
}
func (x *EPlayerType) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(EPlayerType_value, data, "EPlayerType")
	if err != nil {
		return err
	}
	*x = EPlayerType(value)
	return nil
}
func (EPlayerType) EnumDescriptor() ([]byte, []int) { return fileDescriptor8, []int{18} }

type ERoleSexType int32

const (
	ERoleSexType_E_ROLE_SEX_TYPE_NONE   ERoleSexType = 0
	ERoleSexType_E_ROLE_SEX_TYPE_MALE   ERoleSexType = 1
	ERoleSexType_E_ROLE_SEX_TYPE_FEMALE ERoleSexType = 2
)

var ERoleSexType_name = map[int32]string{
	0: "E_ROLE_SEX_TYPE_NONE",
	1: "E_ROLE_SEX_TYPE_MALE",
	2: "E_ROLE_SEX_TYPE_FEMALE",
}
var ERoleSexType_value = map[string]int32{
	"E_ROLE_SEX_TYPE_NONE":   0,
	"E_ROLE_SEX_TYPE_MALE":   1,
	"E_ROLE_SEX_TYPE_FEMALE": 2,
}

func (x ERoleSexType) Enum() *ERoleSexType {
	p := new(ERoleSexType)
	*p = x
	return p
}
func (x ERoleSexType) String() string {
	return proto.EnumName(ERoleSexType_name, int32(x))
}
func (x *ERoleSexType) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(ERoleSexType_value, data, "ERoleSexType")
	if err != nil {
		return err
	}
	*x = ERoleSexType(value)
	return nil
}
func (ERoleSexType) EnumDescriptor() ([]byte, []int) { return fileDescriptor8, []int{19} }

// 回合操作类型
type ERoundOP int32

const (
	ERoundOP_E_ROUND_OP_SKILL ERoundOP = 1
)

var ERoundOP_name = map[int32]string{
	1: "E_ROUND_OP_SKILL",
}
var ERoundOP_value = map[string]int32{
	"E_ROUND_OP_SKILL": 1,
}

func (x ERoundOP) Enum() *ERoundOP {
	p := new(ERoundOP)
	*p = x
	return p
}
func (x ERoundOP) String() string {
	return proto.EnumName(ERoundOP_name, int32(x))
}
func (x *ERoundOP) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(ERoundOP_value, data, "ERoundOP")
	if err != nil {
		return err
	}
	*x = ERoundOP(value)
	return nil
}
func (ERoundOP) EnumDescriptor() ([]byte, []int) { return fileDescriptor8, []int{20} }

type ESoulSlot int32

const (
	ESoulSlot_SOUL_SLOT_1 ESoulSlot = 0
	ESoulSlot_SOUL_SLOT_2 ESoulSlot = 1
	ESoulSlot_SOUL_SLOT_3 ESoulSlot = 2
	ESoulSlot_SOUL_SLOT_4 ESoulSlot = 3
	ESoulSlot_SOUL_SLOT_5 ESoulSlot = 4
	ESoulSlot_SOUL_SLOT_6 ESoulSlot = 5
)

var ESoulSlot_name = map[int32]string{
	0: "SOUL_SLOT_1",
	1: "SOUL_SLOT_2",
	2: "SOUL_SLOT_3",
	3: "SOUL_SLOT_4",
	4: "SOUL_SLOT_5",
	5: "SOUL_SLOT_6",
}
var ESoulSlot_value = map[string]int32{
	"SOUL_SLOT_1": 0,
	"SOUL_SLOT_2": 1,
	"SOUL_SLOT_3": 2,
	"SOUL_SLOT_4": 3,
	"SOUL_SLOT_5": 4,
	"SOUL_SLOT_6": 5,
}

func (x ESoulSlot) Enum() *ESoulSlot {
	p := new(ESoulSlot)
	*p = x
	return p
}
func (x ESoulSlot) String() string {
	return proto.EnumName(ESoulSlot_name, int32(x))
}
func (x *ESoulSlot) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(ESoulSlot_value, data, "ESoulSlot")
	if err != nil {
		return err
	}
	*x = ESoulSlot(value)
	return nil
}
func (ESoulSlot) EnumDescriptor() ([]byte, []int) { return fileDescriptor8, []int{21} }

// 操作类型枚举
type EOperatorType int32

const (
	EOperatorType_OPERATOR_TYPE_ADD    EOperatorType = 1
	EOperatorType_OPERATOR_TYPE_REDUCE EOperatorType = 2
)

var EOperatorType_name = map[int32]string{
	1: "OPERATOR_TYPE_ADD",
	2: "OPERATOR_TYPE_REDUCE",
}
var EOperatorType_value = map[string]int32{
	"OPERATOR_TYPE_ADD":    1,
	"OPERATOR_TYPE_REDUCE": 2,
}

func (x EOperatorType) Enum() *EOperatorType {
	p := new(EOperatorType)
	*p = x
	return p
}
func (x EOperatorType) String() string {
	return proto.EnumName(EOperatorType_name, int32(x))
}
func (x *EOperatorType) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(EOperatorType_value, data, "EOperatorType")
	if err != nil {
		return err
	}
	*x = EOperatorType(value)
	return nil
}
func (EOperatorType) EnumDescriptor() ([]byte, []int) { return fileDescriptor8, []int{22} }

type EOperatorDataType int32

const (
	EOperatorDataType_OPERATOR_DATA_TYPE_DATA    EOperatorDataType = 0
	EOperatorDataType_OPERATOR_DATA_TYPE_PERCENT EOperatorDataType = 1
	EOperatorDataType_OPERATOR_DATA_TYPE_MODIFY  EOperatorDataType = 2
)

var EOperatorDataType_name = map[int32]string{
	0: "OPERATOR_DATA_TYPE_DATA",
	1: "OPERATOR_DATA_TYPE_PERCENT",
	2: "OPERATOR_DATA_TYPE_MODIFY",
}
var EOperatorDataType_value = map[string]int32{
	"OPERATOR_DATA_TYPE_DATA":    0,
	"OPERATOR_DATA_TYPE_PERCENT": 1,
	"OPERATOR_DATA_TYPE_MODIFY":  2,
}

func (x EOperatorDataType) Enum() *EOperatorDataType {
	p := new(EOperatorDataType)
	*p = x
	return p
}
func (x EOperatorDataType) String() string {
	return proto.EnumName(EOperatorDataType_name, int32(x))
}
func (x *EOperatorDataType) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(EOperatorDataType_value, data, "EOperatorDataType")
	if err != nil {
		return err
	}
	*x = EOperatorDataType(value)
	return nil
}
func (EOperatorDataType) EnumDescriptor() ([]byte, []int) { return fileDescriptor8, []int{23} }

type ESkillCfgOptType int32

const (
	ESkillCfgOptType_SKILL_CFG_OPT_TYPE_REMOVE ESkillCfgOptType = 1
	ESkillCfgOptType_SKILL_CFG_OPT_TYPE_SET    ESkillCfgOptType = 2
)

var ESkillCfgOptType_name = map[int32]string{
	1: "SKILL_CFG_OPT_TYPE_REMOVE",
	2: "SKILL_CFG_OPT_TYPE_SET",
}
var ESkillCfgOptType_value = map[string]int32{
	"SKILL_CFG_OPT_TYPE_REMOVE": 1,
	"SKILL_CFG_OPT_TYPE_SET":    2,
}

func (x ESkillCfgOptType) Enum() *ESkillCfgOptType {
	p := new(ESkillCfgOptType)
	*p = x
	return p
}
func (x ESkillCfgOptType) String() string {
	return proto.EnumName(ESkillCfgOptType_name, int32(x))
}
func (x *ESkillCfgOptType) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(ESkillCfgOptType_value, data, "ESkillCfgOptType")
	if err != nil {
		return err
	}
	*x = ESkillCfgOptType(value)
	return nil
}
func (ESkillCfgOptType) EnumDescriptor() ([]byte, []int) { return fileDescriptor8, []int{24} }

type ESkinOpenType int32

const (
	ESkinOpenType_SKIN_OPEN_TYPE_NONE        ESkinOpenType = 0
	ESkinOpenType_SKIN_OPEN_TYPE_ROLE_LEVEL  ESkinOpenType = 1
	ESkinOpenType_SKIN_OPEN_TYPE_VIP_LEVEL   ESkinOpenType = 2
	ESkinOpenType_SKIN_OPEN_TYPE_GRADE       ESkinOpenType = 3
	ESkinOpenType_SKIN_OPEN_TYPE_JADE        ESkinOpenType = 4
	ESkinOpenType_SKIN_OPEN_TYPE_SKIN_TICKET ESkinOpenType = 5
)

var ESkinOpenType_name = map[int32]string{
	0: "SKIN_OPEN_TYPE_NONE",
	1: "SKIN_OPEN_TYPE_ROLE_LEVEL",
	2: "SKIN_OPEN_TYPE_VIP_LEVEL",
	3: "SKIN_OPEN_TYPE_GRADE",
	4: "SKIN_OPEN_TYPE_JADE",
	5: "SKIN_OPEN_TYPE_SKIN_TICKET",
}
var ESkinOpenType_value = map[string]int32{
	"SKIN_OPEN_TYPE_NONE":        0,
	"SKIN_OPEN_TYPE_ROLE_LEVEL":  1,
	"SKIN_OPEN_TYPE_VIP_LEVEL":   2,
	"SKIN_OPEN_TYPE_GRADE":       3,
	"SKIN_OPEN_TYPE_JADE":        4,
	"SKIN_OPEN_TYPE_SKIN_TICKET": 5,
}

func (x ESkinOpenType) Enum() *ESkinOpenType {
	p := new(ESkinOpenType)
	*p = x
	return p
}
func (x ESkinOpenType) String() string {
	return proto.EnumName(ESkinOpenType_name, int32(x))
}
func (x *ESkinOpenType) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(ESkinOpenType_value, data, "ESkinOpenType")
	if err != nil {
		return err
	}
	*x = ESkinOpenType(value)
	return nil
}
func (ESkinOpenType) EnumDescriptor() ([]byte, []int) { return fileDescriptor8, []int{25} }

type ERoleEventType int32

const (
	ERoleEventType_ROLE_EVENT_TYPE_NONE        ERoleEventType = 0
	ERoleEventType_ROLE_EVENT_TYPE_PLAYER_OPEN ERoleEventType = 1
	ERoleEventType_ROLE_EVENT_TYPE_SKILLUP     ERoleEventType = 2
)

var ERoleEventType_name = map[int32]string{
	0: "ROLE_EVENT_TYPE_NONE",
	1: "ROLE_EVENT_TYPE_PLAYER_OPEN",
	2: "ROLE_EVENT_TYPE_SKILLUP",
}
var ERoleEventType_value = map[string]int32{
	"ROLE_EVENT_TYPE_NONE":        0,
	"ROLE_EVENT_TYPE_PLAYER_OPEN": 1,
	"ROLE_EVENT_TYPE_SKILLUP":     2,
}

func (x ERoleEventType) Enum() *ERoleEventType {
	p := new(ERoleEventType)
	*p = x
	return p
}
func (x ERoleEventType) String() string {
	return proto.EnumName(ERoleEventType_name, int32(x))
}
func (x *ERoleEventType) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(ERoleEventType_value, data, "ERoleEventType")
	if err != nil {
		return err
	}
	*x = ERoleEventType(value)
	return nil
}
func (ERoleEventType) EnumDescriptor() ([]byte, []int) { return fileDescriptor8, []int{26} }

type EItemProType int32

const (
	EItemProType_E_ITEM_PROPERTY_TYPE_GOLD   EItemProType = 0
	EItemProType_E_ITEM_PROPERTY_TYPE_JADE   EItemProType = 1
	EItemProType_E_ITEM_PROPERTY_TYPE_POWER  EItemProType = 2
	EItemProType_E_ITEM_PROPERTY_TYPE_ENERGY EItemProType = 3
)

var EItemProType_name = map[int32]string{
	0: "E_ITEM_PROPERTY_TYPE_GOLD",
	1: "E_ITEM_PROPERTY_TYPE_JADE",
	2: "E_ITEM_PROPERTY_TYPE_POWER",
	3: "E_ITEM_PROPERTY_TYPE_ENERGY",
}
var EItemProType_value = map[string]int32{
	"E_ITEM_PROPERTY_TYPE_GOLD":   0,
	"E_ITEM_PROPERTY_TYPE_JADE":   1,
	"E_ITEM_PROPERTY_TYPE_POWER":  2,
	"E_ITEM_PROPERTY_TYPE_ENERGY": 3,
}

func (x EItemProType) Enum() *EItemProType {
	p := new(EItemProType)
	*p = x
	return p
}
func (x EItemProType) String() string {
	return proto.EnumName(EItemProType_name, int32(x))
}
func (x *EItemProType) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(EItemProType_value, data, "EItemProType")
	if err != nil {
		return err
	}
	*x = EItemProType(value)
	return nil
}
func (EItemProType) EnumDescriptor() ([]byte, []int) { return fileDescriptor8, []int{27} }

type ERoleBuyType int32

const (
	ERoleBuyType_E_ROLE_BUY_TYPE_GOLD   ERoleBuyType = 0
	ERoleBuyType_E_ROLE_BUY_TYPE_JADE   ERoleBuyType = 1
	ERoleBuyType_E_ROLE_BUY_TYPE_POWER  ERoleBuyType = 2
	ERoleBuyType_E_ROLE_BUY_TYPE_ENERGY ERoleBuyType = 3
)

var ERoleBuyType_name = map[int32]string{
	0: "E_ROLE_BUY_TYPE_GOLD",
	1: "E_ROLE_BUY_TYPE_JADE",
	2: "E_ROLE_BUY_TYPE_POWER",
	3: "E_ROLE_BUY_TYPE_ENERGY",
}
var ERoleBuyType_value = map[string]int32{
	"E_ROLE_BUY_TYPE_GOLD":   0,
	"E_ROLE_BUY_TYPE_JADE":   1,
	"E_ROLE_BUY_TYPE_POWER":  2,
	"E_ROLE_BUY_TYPE_ENERGY": 3,
}

func (x ERoleBuyType) Enum() *ERoleBuyType {
	p := new(ERoleBuyType)
	*p = x
	return p
}
func (x ERoleBuyType) String() string {
	return proto.EnumName(ERoleBuyType_name, int32(x))
}
func (x *ERoleBuyType) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(ERoleBuyType_value, data, "ERoleBuyType")
	if err != nil {
		return err
	}
	*x = ERoleBuyType(value)
	return nil
}
func (ERoleBuyType) EnumDescriptor() ([]byte, []int) { return fileDescriptor8, []int{28} }

type EValueType int32

const (
	EValueType_E_VALUE_TYPE_RATIO EValueType = 1
	EValueType_E_VALUE_TYPE_FIX   EValueType = 2
)

var EValueType_name = map[int32]string{
	1: "E_VALUE_TYPE_RATIO",
	2: "E_VALUE_TYPE_FIX",
}
var EValueType_value = map[string]int32{
	"E_VALUE_TYPE_RATIO": 1,
	"E_VALUE_TYPE_FIX":   2,
}

func (x EValueType) Enum() *EValueType {
	p := new(EValueType)
	*p = x
	return p
}
func (x EValueType) String() string {
	return proto.EnumName(EValueType_name, int32(x))
}
func (x *EValueType) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(EValueType_value, data, "EValueType")
	if err != nil {
		return err
	}
	*x = EValueType(value)
	return nil
}
func (EValueType) EnumDescriptor() ([]byte, []int) { return fileDescriptor8, []int{29} }

// 英雄属性改变标签
type EHeroInfoChangeTag int32

const (
	EHeroInfoChangeTag_E_HERO_INFO_CHANGE_UP_LEVEL EHeroInfoChangeTag = 1
	EHeroInfoChangeTag_E_HERO_INFO_CHANGE_UP_STAR  EHeroInfoChangeTag = 2
	EHeroInfoChangeTag_E_HERO_INFO_CHANGE_AWAKEN   EHeroInfoChangeTag = 3
)

var EHeroInfoChangeTag_name = map[int32]string{
	1: "E_HERO_INFO_CHANGE_UP_LEVEL",
	2: "E_HERO_INFO_CHANGE_UP_STAR",
	3: "E_HERO_INFO_CHANGE_AWAKEN",
}
var EHeroInfoChangeTag_value = map[string]int32{
	"E_HERO_INFO_CHANGE_UP_LEVEL": 1,
	"E_HERO_INFO_CHANGE_UP_STAR":  2,
	"E_HERO_INFO_CHANGE_AWAKEN":   3,
}

func (x EHeroInfoChangeTag) Enum() *EHeroInfoChangeTag {
	p := new(EHeroInfoChangeTag)
	*p = x
	return p
}
func (x EHeroInfoChangeTag) String() string {
	return proto.EnumName(EHeroInfoChangeTag_name, int32(x))
}
func (x *EHeroInfoChangeTag) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(EHeroInfoChangeTag_value, data, "EHeroInfoChangeTag")
	if err != nil {
		return err
	}
	*x = EHeroInfoChangeTag(value)
	return nil
}
func (EHeroInfoChangeTag) EnumDescriptor() ([]byte, []int) { return fileDescriptor8, []int{30} }

type EGender int32

const (
	EGender_EMALE   EGender = 1
	EGender_EFEMALE EGender = 2
)

var EGender_name = map[int32]string{
	1: "EMALE",
	2: "EFEMALE",
}
var EGender_value = map[string]int32{
	"EMALE":   1,
	"EFEMALE": 2,
}

func (x EGender) Enum() *EGender {
	p := new(EGender)
	*p = x
	return p
}
func (x EGender) String() string {
	return proto.EnumName(EGender_name, int32(x))
}
func (x *EGender) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(EGender_value, data, "EGender")
	if err != nil {
		return err
	}
	*x = EGender(value)
	return nil
}
func (EGender) EnumDescriptor() ([]byte, []int) { return fileDescriptor8, []int{31} }

// 回合数据类型
type ESkillDataType int32

const (
	ESkillDataType_SKILL_DATA_TYPE_NONE         ESkillDataType = 0
	ESkillDataType_SKILL_DATA_TYPE_SKILL_DAMAGE ESkillDataType = 1
	ESkillDataType_SKILL_DATA_TYPE_SKILL_CURE   ESkillDataType = 2
)

var ESkillDataType_name = map[int32]string{
	0: "SKILL_DATA_TYPE_NONE",
	1: "SKILL_DATA_TYPE_SKILL_DAMAGE",
	2: "SKILL_DATA_TYPE_SKILL_CURE",
}
var ESkillDataType_value = map[string]int32{
	"SKILL_DATA_TYPE_NONE":         0,
	"SKILL_DATA_TYPE_SKILL_DAMAGE": 1,
	"SKILL_DATA_TYPE_SKILL_CURE":   2,
}

func (x ESkillDataType) Enum() *ESkillDataType {
	p := new(ESkillDataType)
	*p = x
	return p
}
func (x ESkillDataType) String() string {
	return proto.EnumName(ESkillDataType_name, int32(x))
}
func (x *ESkillDataType) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(ESkillDataType_value, data, "ESkillDataType")
	if err != nil {
		return err
	}
	*x = ESkillDataType(value)
	return nil
}
func (ESkillDataType) EnumDescriptor() ([]byte, []int) { return fileDescriptor8, []int{32} }

type EItemPropertyType int32

const (
	EItemPropertyType_ITEM_PROP_TP_B_BAGIN      EItemPropertyType = 0
	EItemPropertyType_ITEM_PROP_TP_B_FLAG       EItemPropertyType = 0
	EItemPropertyType_ITEM_PROP_TP_B_TEMPLATE   EItemPropertyType = 1
	EItemPropertyType_ITEM_PROP_TP_B_UUID       EItemPropertyType = 2
	EItemPropertyType_ITEM_PROP_TP_B_OVERLAP    EItemPropertyType = 3
	EItemPropertyType_ITEM_PROP_TP_B_SPAWN_TIME EItemPropertyType = 4
	EItemPropertyType_ITEM_PROP_TP_B_MAX        EItemPropertyType = 5
	EItemPropertyType_ITEM_PROP_TP_E_BEGIN      EItemPropertyType = 100
	EItemPropertyType_ITEM_PROP_TP_E_MAX        EItemPropertyType = 101
)

var EItemPropertyType_name = map[int32]string{
	0: "ITEM_PROP_TP_B_BAGIN",
	// Duplicate value: 0: "ITEM_PROP_TP_B_FLAG",
	1:   "ITEM_PROP_TP_B_TEMPLATE",
	2:   "ITEM_PROP_TP_B_UUID",
	3:   "ITEM_PROP_TP_B_OVERLAP",
	4:   "ITEM_PROP_TP_B_SPAWN_TIME",
	5:   "ITEM_PROP_TP_B_MAX",
	100: "ITEM_PROP_TP_E_BEGIN",
	101: "ITEM_PROP_TP_E_MAX",
}
var EItemPropertyType_value = map[string]int32{
	"ITEM_PROP_TP_B_BAGIN":      0,
	"ITEM_PROP_TP_B_FLAG":       0,
	"ITEM_PROP_TP_B_TEMPLATE":   1,
	"ITEM_PROP_TP_B_UUID":       2,
	"ITEM_PROP_TP_B_OVERLAP":    3,
	"ITEM_PROP_TP_B_SPAWN_TIME": 4,
	"ITEM_PROP_TP_B_MAX":        5,
	"ITEM_PROP_TP_E_BEGIN":      100,
	"ITEM_PROP_TP_E_MAX":        101,
}

func (x EItemPropertyType) Enum() *EItemPropertyType {
	p := new(EItemPropertyType)
	*p = x
	return p
}
func (x EItemPropertyType) String() string {
	return proto.EnumName(EItemPropertyType_name, int32(x))
}
func (x *EItemPropertyType) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(EItemPropertyType_value, data, "EItemPropertyType")
	if err != nil {
		return err
	}
	*x = EItemPropertyType(value)
	return nil
}
func (EItemPropertyType) EnumDescriptor() ([]byte, []int) { return fileDescriptor8, []int{33} }

// for now 32 bit would be enough!
type EItemFlagBits int32

const (
	EItemFlagBits_ITEM_FLAG_BIT_VALID  EItemFlagBits = 0
	EItemFlagBits_ITEM_FLAG_BIT_LOCK   EItemFlagBits = 1
	EItemFlagBits_ITEM_FLAG_BIT_BIND   EItemFlagBits = 2
	EItemFlagBits_ITEM_FLAG_BIT_MODIFY EItemFlagBits = 31
)

var EItemFlagBits_name = map[int32]string{
	0:  "ITEM_FLAG_BIT_VALID",
	1:  "ITEM_FLAG_BIT_LOCK",
	2:  "ITEM_FLAG_BIT_BIND",
	31: "ITEM_FLAG_BIT_MODIFY",
}
var EItemFlagBits_value = map[string]int32{
	"ITEM_FLAG_BIT_VALID":  0,
	"ITEM_FLAG_BIT_LOCK":   1,
	"ITEM_FLAG_BIT_BIND":   2,
	"ITEM_FLAG_BIT_MODIFY": 31,
}

func (x EItemFlagBits) Enum() *EItemFlagBits {
	p := new(EItemFlagBits)
	*p = x
	return p
}
func (x EItemFlagBits) String() string {
	return proto.EnumName(EItemFlagBits_name, int32(x))
}
func (x *EItemFlagBits) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(EItemFlagBits_value, data, "EItemFlagBits")
	if err != nil {
		return err
	}
	*x = EItemFlagBits(value)
	return nil
}
func (EItemFlagBits) EnumDescriptor() ([]byte, []int) { return fileDescriptor8, []int{34} }

type EMailFlag int32

const (
	EMailFlag_MAIL_NEW           EMailFlag = 0
	EMailFlag_MAIL_READ          EMailFlag = 1
	EMailFlag_MAIL_EMPTY         EMailFlag = 2
	EMailFlag_MAIL_DEL           EMailFlag = 5
	EMailFlag_MAX_MAIL_KEEP_TIME EMailFlag = 2592000
)

var EMailFlag_name = map[int32]string{
	0:       "MAIL_NEW",
	1:       "MAIL_READ",
	2:       "MAIL_EMPTY",
	5:       "MAIL_DEL",
	2592000: "MAX_MAIL_KEEP_TIME",
}
var EMailFlag_value = map[string]int32{
	"MAIL_NEW":           0,
	"MAIL_READ":          1,
	"MAIL_EMPTY":         2,
	"MAIL_DEL":           5,
	"MAX_MAIL_KEEP_TIME": 2592000,
}

func (x EMailFlag) Enum() *EMailFlag {
	p := new(EMailFlag)
	*p = x
	return p
}
func (x EMailFlag) String() string {
	return proto.EnumName(EMailFlag_name, int32(x))
}
func (x *EMailFlag) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(EMailFlag_value, data, "EMailFlag")
	if err != nil {
		return err
	}
	*x = EMailFlag(value)
	return nil
}
func (EMailFlag) EnumDescriptor() ([]byte, []int) { return fileDescriptor8, []int{35} }

// gate net info
type GateNetInfo struct {
	Id               *uint64 `protobuf:"varint,1,req,name=id" json:"id,omitempty"`
	Ip               *string `protobuf:"bytes,2,req,name=ip" json:"ip,omitempty"`
	Port             *int32  `protobuf:"varint,3,req,name=port" json:"port,omitempty"`
	GroupName        *string `protobuf:"bytes,4,req,name=group_name" json:"group_name,omitempty"`
	New              *bool   `protobuf:"varint,5,req,name=new" json:"new,omitempty"`
	State            *int32  `protobuf:"varint,6,req,name=state" json:"state,omitempty"`
	Groupindex       *uint32 `protobuf:"varint,7,req,name=groupindex" json:"groupindex,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *GateNetInfo) Reset()                    { *m = GateNetInfo{} }
func (m *GateNetInfo) String() string            { return proto.CompactTextString(m) }
func (*GateNetInfo) ProtoMessage()               {}
func (*GateNetInfo) Descriptor() ([]byte, []int) { return fileDescriptor8, []int{0} }

func (m *GateNetInfo) GetId() uint64 {
	if m != nil && m.Id != nil {
		return *m.Id
	}
	return 0
}

func (m *GateNetInfo) GetIp() string {
	if m != nil && m.Ip != nil {
		return *m.Ip
	}
	return ""
}

func (m *GateNetInfo) GetPort() int32 {
	if m != nil && m.Port != nil {
		return *m.Port
	}
	return 0
}

func (m *GateNetInfo) GetGroupName() string {
	if m != nil && m.GroupName != nil {
		return *m.GroupName
	}
	return ""
}

func (m *GateNetInfo) GetNew() bool {
	if m != nil && m.New != nil {
		return *m.New
	}
	return false
}

func (m *GateNetInfo) GetState() int32 {
	if m != nil && m.State != nil {
		return *m.State
	}
	return 0
}

func (m *GateNetInfo) GetGroupindex() uint32 {
	if m != nil && m.Groupindex != nil {
		return *m.Groupindex
	}
	return 0
}

type PlayerLeaveGameNtf struct {
	Id               *uint64 `protobuf:"varint,1,req,name=id" json:"id,omitempty"`
	Accountid        *uint32 `protobuf:"varint,2,req,name=accountid" json:"accountid,omitempty"`
	Groupid          *uint64 `protobuf:"varint,3,req,name=groupid" json:"groupid,omitempty"`
	Level            *uint32 `protobuf:"varint,4,req,name=level" json:"level,omitempty"`
	Heroid           *uint32 `protobuf:"varint,5,req,name=heroid" json:"heroid,omitempty"`
	Lastlogindate    *uint32 `protobuf:"varint,6,req,name=lastlogindate" json:"lastlogindate,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *PlayerLeaveGameNtf) Reset()                    { *m = PlayerLeaveGameNtf{} }
func (m *PlayerLeaveGameNtf) String() string            { return proto.CompactTextString(m) }
func (*PlayerLeaveGameNtf) ProtoMessage()               {}
func (*PlayerLeaveGameNtf) Descriptor() ([]byte, []int) { return fileDescriptor8, []int{1} }

func (m *PlayerLeaveGameNtf) GetId() uint64 {
	if m != nil && m.Id != nil {
		return *m.Id
	}
	return 0
}

func (m *PlayerLeaveGameNtf) GetAccountid() uint32 {
	if m != nil && m.Accountid != nil {
		return *m.Accountid
	}
	return 0
}

func (m *PlayerLeaveGameNtf) GetGroupid() uint64 {
	if m != nil && m.Groupid != nil {
		return *m.Groupid
	}
	return 0
}

func (m *PlayerLeaveGameNtf) GetLevel() uint32 {
	if m != nil && m.Level != nil {
		return *m.Level
	}
	return 0
}

func (m *PlayerLeaveGameNtf) GetHeroid() uint32 {
	if m != nil && m.Heroid != nil {
		return *m.Heroid
	}
	return 0
}

func (m *PlayerLeaveGameNtf) GetLastlogindate() uint32 {
	if m != nil && m.Lastlogindate != nil {
		return *m.Lastlogindate
	}
	return 0
}

type FgGetPlayerDataReq struct {
	PlayerId         *uint64 `protobuf:"varint,1,opt,name=player_id" json:"player_id,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *FgGetPlayerDataReq) Reset()                    { *m = FgGetPlayerDataReq{} }
func (m *FgGetPlayerDataReq) String() string            { return proto.CompactTextString(m) }
func (*FgGetPlayerDataReq) ProtoMessage()               {}
func (*FgGetPlayerDataReq) Descriptor() ([]byte, []int) { return fileDescriptor8, []int{2} }

func (m *FgGetPlayerDataReq) GetPlayerId() uint64 {
	if m != nil && m.PlayerId != nil {
		return *m.PlayerId
	}
	return 0
}

type NameCheck struct {
	Name             *string `protobuf:"bytes,1,req,name=name" json:"name,omitempty"`
	Attach           *string `protobuf:"bytes,2,opt,name=attach" json:"attach,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *NameCheck) Reset()                    { *m = NameCheck{} }
func (m *NameCheck) String() string            { return proto.CompactTextString(m) }
func (*NameCheck) ProtoMessage()               {}
func (*NameCheck) Descriptor() ([]byte, []int) { return fileDescriptor8, []int{3} }

func (m *NameCheck) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

func (m *NameCheck) GetAttach() string {
	if m != nil && m.Attach != nil {
		return *m.Attach
	}
	return ""
}

type NameCheckAck struct {
	Name             *string `protobuf:"bytes,1,req,name=name" json:"name,omitempty"`
	Ret              *int32  `protobuf:"varint,2,req,name=ret" json:"ret,omitempty"`
	Attach           *string `protobuf:"bytes,4,opt,name=attach" json:"attach,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *NameCheckAck) Reset()                    { *m = NameCheckAck{} }
func (m *NameCheckAck) String() string            { return proto.CompactTextString(m) }
func (*NameCheckAck) ProtoMessage()               {}
func (*NameCheckAck) Descriptor() ([]byte, []int) { return fileDescriptor8, []int{4} }

func (m *NameCheckAck) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

func (m *NameCheckAck) GetRet() int32 {
	if m != nil && m.Ret != nil {
		return *m.Ret
	}
	return 0
}

func (m *NameCheckAck) GetAttach() string {
	if m != nil && m.Attach != nil {
		return *m.Attach
	}
	return ""
}

type ChangeNameCheck struct {
	NewName          *string `protobuf:"bytes,1,req,name=new_name" json:"new_name,omitempty"`
	OldName          *string `protobuf:"bytes,2,req,name=old_name" json:"old_name,omitempty"`
	Clientid         *uint32 `protobuf:"varint,3,req,name=clientid" json:"clientid,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *ChangeNameCheck) Reset()                    { *m = ChangeNameCheck{} }
func (m *ChangeNameCheck) String() string            { return proto.CompactTextString(m) }
func (*ChangeNameCheck) ProtoMessage()               {}
func (*ChangeNameCheck) Descriptor() ([]byte, []int) { return fileDescriptor8, []int{5} }

func (m *ChangeNameCheck) GetNewName() string {
	if m != nil && m.NewName != nil {
		return *m.NewName
	}
	return ""
}

func (m *ChangeNameCheck) GetOldName() string {
	if m != nil && m.OldName != nil {
		return *m.OldName
	}
	return ""
}

func (m *ChangeNameCheck) GetClientid() uint32 {
	if m != nil && m.Clientid != nil {
		return *m.Clientid
	}
	return 0
}

type ChangeNameCheckAck struct {
	NewName          *string `protobuf:"bytes,1,req,name=new_name" json:"new_name,omitempty"`
	OldName          *string `protobuf:"bytes,2,req,name=old_name" json:"old_name,omitempty"`
	Clientid         *uint32 `protobuf:"varint,3,req,name=clientid" json:"clientid,omitempty"`
	Ret              *int32  `protobuf:"varint,4,req,name=ret" json:"ret,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *ChangeNameCheckAck) Reset()                    { *m = ChangeNameCheckAck{} }
func (m *ChangeNameCheckAck) String() string            { return proto.CompactTextString(m) }
func (*ChangeNameCheckAck) ProtoMessage()               {}
func (*ChangeNameCheckAck) Descriptor() ([]byte, []int) { return fileDescriptor8, []int{6} }

func (m *ChangeNameCheckAck) GetNewName() string {
	if m != nil && m.NewName != nil {
		return *m.NewName
	}
	return ""
}

func (m *ChangeNameCheckAck) GetOldName() string {
	if m != nil && m.OldName != nil {
		return *m.OldName
	}
	return ""
}

func (m *ChangeNameCheckAck) GetClientid() uint32 {
	if m != nil && m.Clientid != nil {
		return *m.Clientid
	}
	return 0
}

func (m *ChangeNameCheckAck) GetRet() int32 {
	if m != nil && m.Ret != nil {
		return *m.Ret
	}
	return 0
}

// group of area
type GroupAreaInfo struct {
	Groupids         []uint64 `protobuf:"varint,1,rep,name=groupids" json:"groupids,omitempty"`
	AreaGroupName    *string  `protobuf:"bytes,2,req,name=area_group_name" json:"area_group_name,omitempty"`
	XXX_unrecognized []byte   `json:"-"`
}

func (m *GroupAreaInfo) Reset()                    { *m = GroupAreaInfo{} }
func (m *GroupAreaInfo) String() string            { return proto.CompactTextString(m) }
func (*GroupAreaInfo) ProtoMessage()               {}
func (*GroupAreaInfo) Descriptor() ([]byte, []int) { return fileDescriptor8, []int{7} }

func (m *GroupAreaInfo) GetGroupids() []uint64 {
	if m != nil {
		return m.Groupids
	}
	return nil
}

func (m *GroupAreaInfo) GetAreaGroupName() string {
	if m != nil && m.AreaGroupName != nil {
		return *m.AreaGroupName
	}
	return ""
}

type GroupHeroInfo struct {
	Groupid          *uint64 `protobuf:"varint,1,req,name=groupid" json:"groupid,omitempty"`
	Heroid           *uint32 `protobuf:"varint,2,req,name=heroid" json:"heroid,omitempty"`
	Lev              *uint32 `protobuf:"varint,3,req,name=lev" json:"lev,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *GroupHeroInfo) Reset()                    { *m = GroupHeroInfo{} }
func (m *GroupHeroInfo) String() string            { return proto.CompactTextString(m) }
func (*GroupHeroInfo) ProtoMessage()               {}
func (*GroupHeroInfo) Descriptor() ([]byte, []int) { return fileDescriptor8, []int{8} }

func (m *GroupHeroInfo) GetGroupid() uint64 {
	if m != nil && m.Groupid != nil {
		return *m.Groupid
	}
	return 0
}

func (m *GroupHeroInfo) GetHeroid() uint32 {
	if m != nil && m.Heroid != nil {
		return *m.Heroid
	}
	return 0
}

func (m *GroupHeroInfo) GetLev() uint32 {
	if m != nil && m.Lev != nil {
		return *m.Lev
	}
	return 0
}

type Iteminfo struct {
	Type             *int32  `protobuf:"varint,1,req,name=type" json:"type,omitempty"`
	Id               *uint32 `protobuf:"varint,2,req,name=id" json:"id,omitempty"`
	Num              *int32  `protobuf:"varint,3,req,name=num" json:"num,omitempty"`
	ResolveHeroId    *int32  `protobuf:"varint,4,opt,name=resolve_hero_id,def=0" json:"resolve_hero_id,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *Iteminfo) Reset()                    { *m = Iteminfo{} }
func (m *Iteminfo) String() string            { return proto.CompactTextString(m) }
func (*Iteminfo) ProtoMessage()               {}
func (*Iteminfo) Descriptor() ([]byte, []int) { return fileDescriptor8, []int{9} }

const Default_Iteminfo_ResolveHeroId int32 = 0

func (m *Iteminfo) GetType() int32 {
	if m != nil && m.Type != nil {
		return *m.Type
	}
	return 0
}

func (m *Iteminfo) GetId() uint32 {
	if m != nil && m.Id != nil {
		return *m.Id
	}
	return 0
}

func (m *Iteminfo) GetNum() int32 {
	if m != nil && m.Num != nil {
		return *m.Num
	}
	return 0
}

func (m *Iteminfo) GetResolveHeroId() int32 {
	if m != nil && m.ResolveHeroId != nil {
		return *m.ResolveHeroId
	}
	return Default_Iteminfo_ResolveHeroId
}

// 技能参数
type RoundOpSkill struct {
	ObjId            *uint32 `protobuf:"varint,1,req,name=obj_id" json:"obj_id,omitempty"`
	TargetId         *uint32 `protobuf:"varint,2,req,name=target_id" json:"target_id,omitempty"`
	SkillId          *uint32 `protobuf:"varint,3,req,name=skill_id" json:"skill_id,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *RoundOpSkill) Reset()                    { *m = RoundOpSkill{} }
func (m *RoundOpSkill) String() string            { return proto.CompactTextString(m) }
func (*RoundOpSkill) ProtoMessage()               {}
func (*RoundOpSkill) Descriptor() ([]byte, []int) { return fileDescriptor8, []int{10} }

func (m *RoundOpSkill) GetObjId() uint32 {
	if m != nil && m.ObjId != nil {
		return *m.ObjId
	}
	return 0
}

func (m *RoundOpSkill) GetTargetId() uint32 {
	if m != nil && m.TargetId != nil {
		return *m.TargetId
	}
	return 0
}

func (m *RoundOpSkill) GetSkillId() uint32 {
	if m != nil && m.SkillId != nil {
		return *m.SkillId
	}
	return 0
}

// 回合操作参数
type RoundOpParam struct {
	Type             *ERoundOP     `protobuf:"varint,1,req,name=type,enum=SProtoSpace.ERoundOP" json:"type,omitempty"`
	Skill            *RoundOpSkill `protobuf:"bytes,2,opt,name=skill" json:"skill,omitempty"`
	XXX_unrecognized []byte        `json:"-"`
}

func (m *RoundOpParam) Reset()                    { *m = RoundOpParam{} }
func (m *RoundOpParam) String() string            { return proto.CompactTextString(m) }
func (*RoundOpParam) ProtoMessage()               {}
func (*RoundOpParam) Descriptor() ([]byte, []int) { return fileDescriptor8, []int{11} }

func (m *RoundOpParam) GetType() ERoundOP {
	if m != nil && m.Type != nil {
		return *m.Type
	}
	return ERoundOP_E_ROUND_OP_SKILL
}

func (m *RoundOpParam) GetSkill() *RoundOpSkill {
	if m != nil {
		return m.Skill
	}
	return nil
}

type DamageData struct {
	ObjId            *uint32 `protobuf:"varint,1,req,name=obj_id" json:"obj_id,omitempty"`
	Damage           *uint32 `protobuf:"varint,2,req,name=damage" json:"damage,omitempty"`
	Hp               *uint32 `protobuf:"varint,3,req,name=hp" json:"hp,omitempty"`
	Critical         *bool   `protobuf:"varint,4,req,name=critical" json:"critical,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *DamageData) Reset()                    { *m = DamageData{} }
func (m *DamageData) String() string            { return proto.CompactTextString(m) }
func (*DamageData) ProtoMessage()               {}
func (*DamageData) Descriptor() ([]byte, []int) { return fileDescriptor8, []int{12} }

func (m *DamageData) GetObjId() uint32 {
	if m != nil && m.ObjId != nil {
		return *m.ObjId
	}
	return 0
}

func (m *DamageData) GetDamage() uint32 {
	if m != nil && m.Damage != nil {
		return *m.Damage
	}
	return 0
}

func (m *DamageData) GetHp() uint32 {
	if m != nil && m.Hp != nil {
		return *m.Hp
	}
	return 0
}

func (m *DamageData) GetCritical() bool {
	if m != nil && m.Critical != nil {
		return *m.Critical
	}
	return false
}

type ObjState struct {
	ObjId            *uint32  `protobuf:"varint,1,req,name=obj_id" json:"obj_id,omitempty"`
	BuffList         []uint32 `protobuf:"varint,2,rep,name=buff_list" json:"buff_list,omitempty"`
	Hp               *int32   `protobuf:"varint,3,req,name=hp" json:"hp,omitempty"`
	XXX_unrecognized []byte   `json:"-"`
}

func (m *ObjState) Reset()                    { *m = ObjState{} }
func (m *ObjState) String() string            { return proto.CompactTextString(m) }
func (*ObjState) ProtoMessage()               {}
func (*ObjState) Descriptor() ([]byte, []int) { return fileDescriptor8, []int{13} }

func (m *ObjState) GetObjId() uint32 {
	if m != nil && m.ObjId != nil {
		return *m.ObjId
	}
	return 0
}

func (m *ObjState) GetBuffList() []uint32 {
	if m != nil {
		return m.BuffList
	}
	return nil
}

func (m *ObjState) GetHp() int32 {
	if m != nil && m.Hp != nil {
		return *m.Hp
	}
	return 0
}

type SkillDataDamage struct {
	TargetId         *uint32 `protobuf:"varint,1,req,name=target_id" json:"target_id,omitempty"`
	SkillId          *uint32 `protobuf:"varint,2,req,name=skill_id" json:"skill_id,omitempty"`
	Damage           *uint32 `protobuf:"varint,3,req,name=damage" json:"damage,omitempty"`
	Hp               *uint32 `protobuf:"varint,4,req,name=hp" json:"hp,omitempty"`
	Critical         *bool   `protobuf:"varint,5,req,name=critical" json:"critical,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *SkillDataDamage) Reset()                    { *m = SkillDataDamage{} }
func (m *SkillDataDamage) String() string            { return proto.CompactTextString(m) }
func (*SkillDataDamage) ProtoMessage()               {}
func (*SkillDataDamage) Descriptor() ([]byte, []int) { return fileDescriptor8, []int{14} }

func (m *SkillDataDamage) GetTargetId() uint32 {
	if m != nil && m.TargetId != nil {
		return *m.TargetId
	}
	return 0
}

func (m *SkillDataDamage) GetSkillId() uint32 {
	if m != nil && m.SkillId != nil {
		return *m.SkillId
	}
	return 0
}

func (m *SkillDataDamage) GetDamage() uint32 {
	if m != nil && m.Damage != nil {
		return *m.Damage
	}
	return 0
}

func (m *SkillDataDamage) GetHp() uint32 {
	if m != nil && m.Hp != nil {
		return *m.Hp
	}
	return 0
}

func (m *SkillDataDamage) GetCritical() bool {
	if m != nil && m.Critical != nil {
		return *m.Critical
	}
	return false
}

type SkillDataCure struct {
	TargetId         *uint32 `protobuf:"varint,1,req,name=target_id" json:"target_id,omitempty"`
	SkillId          *uint32 `protobuf:"varint,2,req,name=skill_id" json:"skill_id,omitempty"`
	AddHp            *uint32 `protobuf:"varint,3,req,name=add_hp" json:"add_hp,omitempty"`
	Hp               *uint32 `protobuf:"varint,4,req,name=hp" json:"hp,omitempty"`
	Critical         *bool   `protobuf:"varint,5,req,name=critical" json:"critical,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *SkillDataCure) Reset()                    { *m = SkillDataCure{} }
func (m *SkillDataCure) String() string            { return proto.CompactTextString(m) }
func (*SkillDataCure) ProtoMessage()               {}
func (*SkillDataCure) Descriptor() ([]byte, []int) { return fileDescriptor8, []int{15} }

func (m *SkillDataCure) GetTargetId() uint32 {
	if m != nil && m.TargetId != nil {
		return *m.TargetId
	}
	return 0
}

func (m *SkillDataCure) GetSkillId() uint32 {
	if m != nil && m.SkillId != nil {
		return *m.SkillId
	}
	return 0
}

func (m *SkillDataCure) GetAddHp() uint32 {
	if m != nil && m.AddHp != nil {
		return *m.AddHp
	}
	return 0
}

func (m *SkillDataCure) GetHp() uint32 {
	if m != nil && m.Hp != nil {
		return *m.Hp
	}
	return 0
}

func (m *SkillDataCure) GetCritical() bool {
	if m != nil && m.Critical != nil {
		return *m.Critical
	}
	return false
}

type SkillData struct {
	Type             *ESkillDataType  `protobuf:"varint,1,req,name=type,enum=SProtoSpace.ESkillDataType" json:"type,omitempty"`
	SkillDamage      *SkillDataDamage `protobuf:"bytes,2,opt,name=skill_damage" json:"skill_damage,omitempty"`
	SkillCure        *SkillDataCure   `protobuf:"bytes,3,opt,name=skill_cure" json:"skill_cure,omitempty"`
	XXX_unrecognized []byte           `json:"-"`
}

func (m *SkillData) Reset()                    { *m = SkillData{} }
func (m *SkillData) String() string            { return proto.CompactTextString(m) }
func (*SkillData) ProtoMessage()               {}
func (*SkillData) Descriptor() ([]byte, []int) { return fileDescriptor8, []int{16} }

func (m *SkillData) GetType() ESkillDataType {
	if m != nil && m.Type != nil {
		return *m.Type
	}
	return ESkillDataType_SKILL_DATA_TYPE_NONE
}

func (m *SkillData) GetSkillDamage() *SkillDataDamage {
	if m != nil {
		return m.SkillDamage
	}
	return nil
}

func (m *SkillData) GetSkillCure() *SkillDataCure {
	if m != nil {
		return m.SkillCure
	}
	return nil
}

type BuffDamageData struct {
	ObjId            *uint32 `protobuf:"varint,1,req,name=obj_id" json:"obj_id,omitempty"`
	Damage           *uint32 `protobuf:"varint,2,req,name=damage" json:"damage,omitempty"`
	Hp               *uint32 `protobuf:"varint,3,req,name=hp" json:"hp,omitempty"`
	Critical         *bool   `protobuf:"varint,4,req,name=critical" json:"critical,omitempty"`
	BuffId           *uint32 `protobuf:"varint,5,req,name=buff_id" json:"buff_id,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *BuffDamageData) Reset()                    { *m = BuffDamageData{} }
func (m *BuffDamageData) String() string            { return proto.CompactTextString(m) }
func (*BuffDamageData) ProtoMessage()               {}
func (*BuffDamageData) Descriptor() ([]byte, []int) { return fileDescriptor8, []int{17} }

func (m *BuffDamageData) GetObjId() uint32 {
	if m != nil && m.ObjId != nil {
		return *m.ObjId
	}
	return 0
}

func (m *BuffDamageData) GetDamage() uint32 {
	if m != nil && m.Damage != nil {
		return *m.Damage
	}
	return 0
}

func (m *BuffDamageData) GetHp() uint32 {
	if m != nil && m.Hp != nil {
		return *m.Hp
	}
	return 0
}

func (m *BuffDamageData) GetCritical() bool {
	if m != nil && m.Critical != nil {
		return *m.Critical
	}
	return false
}

func (m *BuffDamageData) GetBuffId() uint32 {
	if m != nil && m.BuffId != nil {
		return *m.BuffId
	}
	return 0
}

type BuffData struct {
	ObjId            *uint32 `protobuf:"varint,1,req,name=obj_id" json:"obj_id,omitempty"`
	BuffId           *uint32 `protobuf:"varint,2,req,name=buff_id" json:"buff_id,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *BuffData) Reset()                    { *m = BuffData{} }
func (m *BuffData) String() string            { return proto.CompactTextString(m) }
func (*BuffData) ProtoMessage()               {}
func (*BuffData) Descriptor() ([]byte, []int) { return fileDescriptor8, []int{18} }

func (m *BuffData) GetObjId() uint32 {
	if m != nil && m.ObjId != nil {
		return *m.ObjId
	}
	return 0
}

func (m *BuffData) GetBuffId() uint32 {
	if m != nil && m.BuffId != nil {
		return *m.BuffId
	}
	return 0
}

type ItemData struct {
	// 这个数组是一个key-value 结构
	Props            []uint64 `protobuf:"varint,1,rep,packed,name=props" json:"props,omitempty"`
	XXX_unrecognized []byte   `json:"-"`
}

func (m *ItemData) Reset()                    { *m = ItemData{} }
func (m *ItemData) String() string            { return proto.CompactTextString(m) }
func (*ItemData) ProtoMessage()               {}
func (*ItemData) Descriptor() ([]byte, []int) { return fileDescriptor8, []int{19} }

func (m *ItemData) GetProps() []uint64 {
	if m != nil {
		return m.Props
	}
	return nil
}

type ClientSkillData struct {
	Id               *uint32 `protobuf:"varint,1,req,name=id" json:"id,omitempty"`
	Level            *int32  `protobuf:"varint,2,req,name=level" json:"level,omitempty"`
	Slot             *int32  `protobuf:"varint,3,req,name=slot" json:"slot,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *ClientSkillData) Reset()                    { *m = ClientSkillData{} }
func (m *ClientSkillData) String() string            { return proto.CompactTextString(m) }
func (*ClientSkillData) ProtoMessage()               {}
func (*ClientSkillData) Descriptor() ([]byte, []int) { return fileDescriptor8, []int{20} }

func (m *ClientSkillData) GetId() uint32 {
	if m != nil && m.Id != nil {
		return *m.Id
	}
	return 0
}

func (m *ClientSkillData) GetLevel() int32 {
	if m != nil && m.Level != nil {
		return *m.Level
	}
	return 0
}

func (m *ClientSkillData) GetSlot() int32 {
	if m != nil && m.Slot != nil {
		return *m.Slot
	}
	return 0
}

type HeroBaseInfo struct {
	HeroId           *uint64 `protobuf:"varint,1,req,name=hero_id" json:"hero_id,omitempty"`
	TemplateId       *uint32 `protobuf:"varint,2,req,name=template_id" json:"template_id,omitempty"`
	Level            *int32  `protobuf:"varint,3,req,name=level" json:"level,omitempty"`
	Star             *int32  `protobuf:"varint,4,req,name=star" json:"star,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *HeroBaseInfo) Reset()                    { *m = HeroBaseInfo{} }
func (m *HeroBaseInfo) String() string            { return proto.CompactTextString(m) }
func (*HeroBaseInfo) ProtoMessage()               {}
func (*HeroBaseInfo) Descriptor() ([]byte, []int) { return fileDescriptor8, []int{21} }

func (m *HeroBaseInfo) GetHeroId() uint64 {
	if m != nil && m.HeroId != nil {
		return *m.HeroId
	}
	return 0
}

func (m *HeroBaseInfo) GetTemplateId() uint32 {
	if m != nil && m.TemplateId != nil {
		return *m.TemplateId
	}
	return 0
}

func (m *HeroBaseInfo) GetLevel() int32 {
	if m != nil && m.Level != nil {
		return *m.Level
	}
	return 0
}

func (m *HeroBaseInfo) GetStar() int32 {
	if m != nil && m.Star != nil {
		return *m.Star
	}
	return 0
}

type HeroAttrValue struct {
	Type             *EAttribute `protobuf:"varint,1,req,name=type,enum=SProtoSpace.EAttribute" json:"type,omitempty"`
	Val              *int32      `protobuf:"varint,2,opt,name=val,def=0" json:"val,omitempty"`
	ValRatio         *int32      `protobuf:"varint,3,opt,name=val_ratio,def=0" json:"val_ratio,omitempty"`
	XXX_unrecognized []byte      `json:"-"`
}

func (m *HeroAttrValue) Reset()                    { *m = HeroAttrValue{} }
func (m *HeroAttrValue) String() string            { return proto.CompactTextString(m) }
func (*HeroAttrValue) ProtoMessage()               {}
func (*HeroAttrValue) Descriptor() ([]byte, []int) { return fileDescriptor8, []int{22} }

const Default_HeroAttrValue_Val int32 = 0
const Default_HeroAttrValue_ValRatio int32 = 0

func (m *HeroAttrValue) GetType() EAttribute {
	if m != nil && m.Type != nil {
		return *m.Type
	}
	return EAttribute_ATTR_ATK
}

func (m *HeroAttrValue) GetVal() int32 {
	if m != nil && m.Val != nil {
		return *m.Val
	}
	return Default_HeroAttrValue_Val
}

func (m *HeroAttrValue) GetValRatio() int32 {
	if m != nil && m.ValRatio != nil {
		return *m.ValRatio
	}
	return Default_HeroAttrValue_ValRatio
}

type HeroBaseAttr struct {
	MaxHp            *int32 `protobuf:"varint,1,req,name=max_hp" json:"max_hp,omitempty"`
	Def              *int32 `protobuf:"varint,2,req,name=def" json:"def,omitempty"`
	Atk              *int32 `protobuf:"varint,3,req,name=atk" json:"atk,omitempty"`
	Speed            *int32 `protobuf:"varint,4,req,name=speed" json:"speed,omitempty"`
	Crit             *int32 `protobuf:"varint,5,req,name=crit" json:"crit,omitempty"`
	CritDmg          *int32 `protobuf:"varint,6,req,name=crit_dmg" json:"crit_dmg,omitempty"`
	Acc              *int32 `protobuf:"varint,7,req,name=acc" json:"acc,omitempty"`
	Res              *int32 `protobuf:"varint,8,req,name=res" json:"res,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *HeroBaseAttr) Reset()                    { *m = HeroBaseAttr{} }
func (m *HeroBaseAttr) String() string            { return proto.CompactTextString(m) }
func (*HeroBaseAttr) ProtoMessage()               {}
func (*HeroBaseAttr) Descriptor() ([]byte, []int) { return fileDescriptor8, []int{23} }

func (m *HeroBaseAttr) GetMaxHp() int32 {
	if m != nil && m.MaxHp != nil {
		return *m.MaxHp
	}
	return 0
}

func (m *HeroBaseAttr) GetDef() int32 {
	if m != nil && m.Def != nil {
		return *m.Def
	}
	return 0
}

func (m *HeroBaseAttr) GetAtk() int32 {
	if m != nil && m.Atk != nil {
		return *m.Atk
	}
	return 0
}

func (m *HeroBaseAttr) GetSpeed() int32 {
	if m != nil && m.Speed != nil {
		return *m.Speed
	}
	return 0
}

func (m *HeroBaseAttr) GetCrit() int32 {
	if m != nil && m.Crit != nil {
		return *m.Crit
	}
	return 0
}

func (m *HeroBaseAttr) GetCritDmg() int32 {
	if m != nil && m.CritDmg != nil {
		return *m.CritDmg
	}
	return 0
}

func (m *HeroBaseAttr) GetAcc() int32 {
	if m != nil && m.Acc != nil {
		return *m.Acc
	}
	return 0
}

func (m *HeroBaseAttr) GetRes() int32 {
	if m != nil && m.Res != nil {
		return *m.Res
	}
	return 0
}

type BattleHeroInfo struct {
	Base             *HeroBaseInfo      `protobuf:"bytes,1,req,name=base" json:"base,omitempty"`
	BaseAttr         []*HeroAttrValue   `protobuf:"bytes,2,rep,name=base_attr" json:"base_attr,omitempty"`
	SoulAttr         []*HeroAttrValue   `protobuf:"bytes,3,rep,name=soul_attr" json:"soul_attr,omitempty"`
	SoulSuitAttr     []*HeroAttrValue   `protobuf:"bytes,4,rep,name=soul_suit_attr" json:"soul_suit_attr,omitempty"`
	SkillData        []*ClientSkillData `protobuf:"bytes,5,rep,name=skill_data" json:"skill_data,omitempty"`
	XXX_unrecognized []byte             `json:"-"`
}

func (m *BattleHeroInfo) Reset()                    { *m = BattleHeroInfo{} }
func (m *BattleHeroInfo) String() string            { return proto.CompactTextString(m) }
func (*BattleHeroInfo) ProtoMessage()               {}
func (*BattleHeroInfo) Descriptor() ([]byte, []int) { return fileDescriptor8, []int{24} }

func (m *BattleHeroInfo) GetBase() *HeroBaseInfo {
	if m != nil {
		return m.Base
	}
	return nil
}

func (m *BattleHeroInfo) GetBaseAttr() []*HeroAttrValue {
	if m != nil {
		return m.BaseAttr
	}
	return nil
}

func (m *BattleHeroInfo) GetSoulAttr() []*HeroAttrValue {
	if m != nil {
		return m.SoulAttr
	}
	return nil
}

func (m *BattleHeroInfo) GetSoulSuitAttr() []*HeroAttrValue {
	if m != nil {
		return m.SoulSuitAttr
	}
	return nil
}

func (m *BattleHeroInfo) GetSkillData() []*ClientSkillData {
	if m != nil {
		return m.SkillData
	}
	return nil
}

type BattlePlayerInfo struct {
	Id               *uint64           `protobuf:"varint,1,req,name=id" json:"id,omitempty"`
	Name             *string           `protobuf:"bytes,2,req,name=name" json:"name,omitempty"`
	Level            *int32            `protobuf:"varint,3,req,name=level" json:"level,omitempty"`
	Heroes           []*BattleHeroInfo `protobuf:"bytes,4,rep,name=heroes" json:"heroes,omitempty"`
	Gsid             *uint32           `protobuf:"varint,5,req,name=gsid" json:"gsid,omitempty"`
	Player           *BattleHeroInfo   `protobuf:"bytes,6,req,name=player" json:"player,omitempty"`
	XXX_unrecognized []byte            `json:"-"`
}

func (m *BattlePlayerInfo) Reset()                    { *m = BattlePlayerInfo{} }
func (m *BattlePlayerInfo) String() string            { return proto.CompactTextString(m) }
func (*BattlePlayerInfo) ProtoMessage()               {}
func (*BattlePlayerInfo) Descriptor() ([]byte, []int) { return fileDescriptor8, []int{25} }

func (m *BattlePlayerInfo) GetId() uint64 {
	if m != nil && m.Id != nil {
		return *m.Id
	}
	return 0
}

func (m *BattlePlayerInfo) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

func (m *BattlePlayerInfo) GetLevel() int32 {
	if m != nil && m.Level != nil {
		return *m.Level
	}
	return 0
}

func (m *BattlePlayerInfo) GetHeroes() []*BattleHeroInfo {
	if m != nil {
		return m.Heroes
	}
	return nil
}

func (m *BattlePlayerInfo) GetGsid() uint32 {
	if m != nil && m.Gsid != nil {
		return *m.Gsid
	}
	return 0
}

func (m *BattlePlayerInfo) GetPlayer() *BattleHeroInfo {
	if m != nil {
		return m.Player
	}
	return nil
}

type PvpBattleInitData struct {
	Players          []*BattlePlayerInfo `protobuf:"bytes,1,rep,name=players" json:"players,omitempty"`
	InitPower        *int32              `protobuf:"varint,2,req,name=init_power" json:"init_power,omitempty"`
	XXX_unrecognized []byte              `json:"-"`
}

func (m *PvpBattleInitData) Reset()                    { *m = PvpBattleInitData{} }
func (m *PvpBattleInitData) String() string            { return proto.CompactTextString(m) }
func (*PvpBattleInitData) ProtoMessage()               {}
func (*PvpBattleInitData) Descriptor() ([]byte, []int) { return fileDescriptor8, []int{26} }

func (m *PvpBattleInitData) GetPlayers() []*BattlePlayerInfo {
	if m != nil {
		return m.Players
	}
	return nil
}

func (m *PvpBattleInitData) GetInitPower() int32 {
	if m != nil && m.InitPower != nil {
		return *m.InitPower
	}
	return 0
}

type CreateBattleData struct {
	Type             *EBattleType       `protobuf:"varint,1,req,name=type,enum=SProtoSpace.EBattleType" json:"type,omitempty"`
	PvpData          *PvpBattleInitData `protobuf:"bytes,2,opt,name=pvp_data" json:"pvp_data,omitempty"`
	XXX_unrecognized []byte             `json:"-"`
}

func (m *CreateBattleData) Reset()                    { *m = CreateBattleData{} }
func (m *CreateBattleData) String() string            { return proto.CompactTextString(m) }
func (*CreateBattleData) ProtoMessage()               {}
func (*CreateBattleData) Descriptor() ([]byte, []int) { return fileDescriptor8, []int{27} }

func (m *CreateBattleData) GetType() EBattleType {
	if m != nil && m.Type != nil {
		return *m.Type
	}
	return EBattleType_BATTLE_TYPE_PVP
}

func (m *CreateBattleData) GetPvpData() *PvpBattleInitData {
	if m != nil {
		return m.PvpData
	}
	return nil
}

type RunningEntity struct {
	Objid            *uint32 `protobuf:"varint,1,req,name=objid" json:"objid,omitempty"`
	Position         *int32  `protobuf:"varint,2,req,name=position" json:"position,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *RunningEntity) Reset()                    { *m = RunningEntity{} }
func (m *RunningEntity) String() string            { return proto.CompactTextString(m) }
func (*RunningEntity) ProtoMessage()               {}
func (*RunningEntity) Descriptor() ([]byte, []int) { return fileDescriptor8, []int{28} }

func (m *RunningEntity) GetObjid() uint32 {
	if m != nil && m.Objid != nil {
		return *m.Objid
	}
	return 0
}

func (m *RunningEntity) GetPosition() int32 {
	if m != nil && m.Position != nil {
		return *m.Position
	}
	return 0
}

type RunningQueue struct {
	Lenth            *int32           `protobuf:"varint,1,req,name=lenth" json:"lenth,omitempty"`
	Enities          []*RunningEntity `protobuf:"bytes,2,rep,name=enities" json:"enities,omitempty"`
	XXX_unrecognized []byte           `json:"-"`
}

func (m *RunningQueue) Reset()                    { *m = RunningQueue{} }
func (m *RunningQueue) String() string            { return proto.CompactTextString(m) }
func (*RunningQueue) ProtoMessage()               {}
func (*RunningQueue) Descriptor() ([]byte, []int) { return fileDescriptor8, []int{29} }

func (m *RunningQueue) GetLenth() int32 {
	if m != nil && m.Lenth != nil {
		return *m.Lenth
	}
	return 0
}

func (m *RunningQueue) GetEnities() []*RunningEntity {
	if m != nil {
		return m.Enities
	}
	return nil
}

type ClientHeroInfo struct {
	Uuid             *uint64 `protobuf:"varint,1,req,name=uuid" json:"uuid,omitempty"`
	Objid            *uint32 `protobuf:"varint,2,req,name=objid" json:"objid,omitempty"`
	TemplateId       *uint32 `protobuf:"varint,3,req,name=template_id" json:"template_id,omitempty"`
	Level            *int32  `protobuf:"varint,4,req,name=level" json:"level,omitempty"`
	Star             *int32  `protobuf:"varint,5,req,name=star" json:"star,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *ClientHeroInfo) Reset()                    { *m = ClientHeroInfo{} }
func (m *ClientHeroInfo) String() string            { return proto.CompactTextString(m) }
func (*ClientHeroInfo) ProtoMessage()               {}
func (*ClientHeroInfo) Descriptor() ([]byte, []int) { return fileDescriptor8, []int{30} }

func (m *ClientHeroInfo) GetUuid() uint64 {
	if m != nil && m.Uuid != nil {
		return *m.Uuid
	}
	return 0
}

func (m *ClientHeroInfo) GetObjid() uint32 {
	if m != nil && m.Objid != nil {
		return *m.Objid
	}
	return 0
}

func (m *ClientHeroInfo) GetTemplateId() uint32 {
	if m != nil && m.TemplateId != nil {
		return *m.TemplateId
	}
	return 0
}

func (m *ClientHeroInfo) GetLevel() int32 {
	if m != nil && m.Level != nil {
		return *m.Level
	}
	return 0
}

func (m *ClientHeroInfo) GetStar() int32 {
	if m != nil && m.Star != nil {
		return *m.Star
	}
	return 0
}

type ClientBattlePlayerInfo struct {
	Id               *uint64           `protobuf:"varint,1,req,name=id" json:"id,omitempty"`
	Name             *string           `protobuf:"bytes,2,req,name=name" json:"name,omitempty"`
	Level            *int32            `protobuf:"varint,3,req,name=level" json:"level,omitempty"`
	Camp             *int32            `protobuf:"varint,4,req,name=camp" json:"camp,omitempty"`
	Type             *EPlayerType      `protobuf:"varint,5,req,name=type,enum=SProtoSpace.EPlayerType" json:"type,omitempty"`
	Heroes           []*ClientHeroInfo `protobuf:"bytes,6,rep,name=heroes" json:"heroes,omitempty"`
	XXX_unrecognized []byte            `json:"-"`
}

func (m *ClientBattlePlayerInfo) Reset()                    { *m = ClientBattlePlayerInfo{} }
func (m *ClientBattlePlayerInfo) String() string            { return proto.CompactTextString(m) }
func (*ClientBattlePlayerInfo) ProtoMessage()               {}
func (*ClientBattlePlayerInfo) Descriptor() ([]byte, []int) { return fileDescriptor8, []int{31} }

func (m *ClientBattlePlayerInfo) GetId() uint64 {
	if m != nil && m.Id != nil {
		return *m.Id
	}
	return 0
}

func (m *ClientBattlePlayerInfo) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

func (m *ClientBattlePlayerInfo) GetLevel() int32 {
	if m != nil && m.Level != nil {
		return *m.Level
	}
	return 0
}

func (m *ClientBattlePlayerInfo) GetCamp() int32 {
	if m != nil && m.Camp != nil {
		return *m.Camp
	}
	return 0
}

func (m *ClientBattlePlayerInfo) GetType() EPlayerType {
	if m != nil && m.Type != nil {
		return *m.Type
	}
	return EPlayerType_PLAYER_TYPE_NONE
}

func (m *ClientBattlePlayerInfo) GetHeroes() []*ClientHeroInfo {
	if m != nil {
		return m.Heroes
	}
	return nil
}

type ClientPvpBattleData struct {
	Players          []*ClientBattlePlayerInfo `protobuf:"bytes,1,rep,name=players" json:"players,omitempty"`
	InitPower        *int32                    `protobuf:"varint,2,req,name=init_power" json:"init_power,omitempty"`
	XXX_unrecognized []byte                    `json:"-"`
}

func (m *ClientPvpBattleData) Reset()                    { *m = ClientPvpBattleData{} }
func (m *ClientPvpBattleData) String() string            { return proto.CompactTextString(m) }
func (*ClientPvpBattleData) ProtoMessage()               {}
func (*ClientPvpBattleData) Descriptor() ([]byte, []int) { return fileDescriptor8, []int{32} }

func (m *ClientPvpBattleData) GetPlayers() []*ClientBattlePlayerInfo {
	if m != nil {
		return m.Players
	}
	return nil
}

func (m *ClientPvpBattleData) GetInitPower() int32 {
	if m != nil && m.InitPower != nil {
		return *m.InitPower
	}
	return 0
}

type ClientBattleData struct {
	Type             *EBattleType         `protobuf:"varint,1,req,name=type,enum=SProtoSpace.EBattleType" json:"type,omitempty"`
	PvpData          *ClientPvpBattleData `protobuf:"bytes,2,opt,name=pvp_data" json:"pvp_data,omitempty"`
	XXX_unrecognized []byte               `json:"-"`
}

func (m *ClientBattleData) Reset()                    { *m = ClientBattleData{} }
func (m *ClientBattleData) String() string            { return proto.CompactTextString(m) }
func (*ClientBattleData) ProtoMessage()               {}
func (*ClientBattleData) Descriptor() ([]byte, []int) { return fileDescriptor8, []int{33} }

func (m *ClientBattleData) GetType() EBattleType {
	if m != nil && m.Type != nil {
		return *m.Type
	}
	return EBattleType_BATTLE_TYPE_PVP
}

func (m *ClientBattleData) GetPvpData() *ClientPvpBattleData {
	if m != nil {
		return m.PvpData
	}
	return nil
}

type ClientSoulData struct {
	Id               *uint64 `protobuf:"varint,1,req,name=id" json:"id,omitempty"`
	Slot             *int32  `protobuf:"varint,2,req,name=slot" json:"slot,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *ClientSoulData) Reset()                    { *m = ClientSoulData{} }
func (m *ClientSoulData) String() string            { return proto.CompactTextString(m) }
func (*ClientSoulData) ProtoMessage()               {}
func (*ClientSoulData) Descriptor() ([]byte, []int) { return fileDescriptor8, []int{34} }

func (m *ClientSoulData) GetId() uint64 {
	if m != nil && m.Id != nil {
		return *m.Id
	}
	return 0
}

func (m *ClientSoulData) GetSlot() int32 {
	if m != nil && m.Slot != nil {
		return *m.Slot
	}
	return 0
}

type HeroShowData struct {
	Uuid             *uint64            `protobuf:"varint,1,req,name=uuid" json:"uuid,omitempty"`
	TemplateId       *uint32            `protobuf:"varint,2,req,name=template_id" json:"template_id,omitempty"`
	Level            *int32             `protobuf:"varint,3,req,name=level" json:"level,omitempty"`
	Star             *int32             `protobuf:"varint,4,req,name=star" json:"star,omitempty"`
	Skill            []*ClientSkillData `protobuf:"bytes,5,rep,name=skill" json:"skill,omitempty"`
	Soul             []*ClientSoulData  `protobuf:"bytes,6,rep,name=soul" json:"soul,omitempty"`
	Exp              *int32             `protobuf:"varint,7,req,name=exp" json:"exp,omitempty"`
	Awaken           *bool              `protobuf:"varint,8,req,name=awaken" json:"awaken,omitempty"`
	AwakenAttr       []*HeroAttrValue   `protobuf:"bytes,9,rep,name=awaken_attr" json:"awaken_attr,omitempty"`
	Locked           *bool              `protobuf:"varint,10,req,name=locked" json:"locked,omitempty"`
	CreateTime       *uint32            `protobuf:"varint,11,opt,name=create_time" json:"create_time,omitempty"`
	XXX_unrecognized []byte             `json:"-"`
}

func (m *HeroShowData) Reset()                    { *m = HeroShowData{} }
func (m *HeroShowData) String() string            { return proto.CompactTextString(m) }
func (*HeroShowData) ProtoMessage()               {}
func (*HeroShowData) Descriptor() ([]byte, []int) { return fileDescriptor8, []int{35} }

func (m *HeroShowData) GetUuid() uint64 {
	if m != nil && m.Uuid != nil {
		return *m.Uuid
	}
	return 0
}

func (m *HeroShowData) GetTemplateId() uint32 {
	if m != nil && m.TemplateId != nil {
		return *m.TemplateId
	}
	return 0
}

func (m *HeroShowData) GetLevel() int32 {
	if m != nil && m.Level != nil {
		return *m.Level
	}
	return 0
}

func (m *HeroShowData) GetStar() int32 {
	if m != nil && m.Star != nil {
		return *m.Star
	}
	return 0
}

func (m *HeroShowData) GetSkill() []*ClientSkillData {
	if m != nil {
		return m.Skill
	}
	return nil
}

func (m *HeroShowData) GetSoul() []*ClientSoulData {
	if m != nil {
		return m.Soul
	}
	return nil
}

func (m *HeroShowData) GetExp() int32 {
	if m != nil && m.Exp != nil {
		return *m.Exp
	}
	return 0
}

func (m *HeroShowData) GetAwaken() bool {
	if m != nil && m.Awaken != nil {
		return *m.Awaken
	}
	return false
}

func (m *HeroShowData) GetAwakenAttr() []*HeroAttrValue {
	if m != nil {
		return m.AwakenAttr
	}
	return nil
}

func (m *HeroShowData) GetLocked() bool {
	if m != nil && m.Locked != nil {
		return *m.Locked
	}
	return false
}

func (m *HeroShowData) GetCreateTime() uint32 {
	if m != nil && m.CreateTime != nil {
		return *m.CreateTime
	}
	return 0
}

// 主角
type ItemProperty struct {
	Type             *EItemProType `protobuf:"varint,1,req,name=type,enum=SProtoSpace.EItemProType" json:"type,omitempty"`
	Val              *int32        `protobuf:"varint,2,opt,name=val,def=0" json:"val,omitempty"`
	XXX_unrecognized []byte        `json:"-"`
}

func (m *ItemProperty) Reset()                    { *m = ItemProperty{} }
func (m *ItemProperty) String() string            { return proto.CompactTextString(m) }
func (*ItemProperty) ProtoMessage()               {}
func (*ItemProperty) Descriptor() ([]byte, []int) { return fileDescriptor8, []int{36} }

const Default_ItemProperty_Val int32 = 0

func (m *ItemProperty) GetType() EItemProType {
	if m != nil && m.Type != nil {
		return *m.Type
	}
	return EItemProType_E_ITEM_PROPERTY_TYPE_GOLD
}

func (m *ItemProperty) GetVal() int32 {
	if m != nil && m.Val != nil {
		return *m.Val
	}
	return Default_ItemProperty_Val
}

type RoleBaseBuyData struct {
	BuyPowerTimes    *int32 `protobuf:"varint,1,opt,name=buy_power_times" json:"buy_power_times,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *RoleBaseBuyData) Reset()                    { *m = RoleBaseBuyData{} }
func (m *RoleBaseBuyData) String() string            { return proto.CompactTextString(m) }
func (*RoleBaseBuyData) ProtoMessage()               {}
func (*RoleBaseBuyData) Descriptor() ([]byte, []int) { return fileDescriptor8, []int{37} }

func (m *RoleBaseBuyData) GetBuyPowerTimes() int32 {
	if m != nil && m.BuyPowerTimes != nil {
		return *m.BuyPowerTimes
	}
	return 0
}

type MailInfo struct {
	Uid              *uint64     `protobuf:"varint,1,opt,name=uid" json:"uid,omitempty"`
	Title            *string     `protobuf:"bytes,2,opt,name=title" json:"title,omitempty"`
	Content          *string     `protobuf:"bytes,3,opt,name=content" json:"content,omitempty"`
	Flag             *uint32     `protobuf:"varint,4,opt,name=flag" json:"flag,omitempty"`
	Time             *uint32     `protobuf:"varint,5,opt,name=time" json:"time,omitempty"`
	Sender           *uint64     `protobuf:"varint,6,opt,name=sender" json:"sender,omitempty"`
	Attachs          []*ItemData `protobuf:"bytes,7,rep,name=attachs" json:"attachs,omitempty"`
	XXX_unrecognized []byte      `json:"-"`
}

func (m *MailInfo) Reset()                    { *m = MailInfo{} }
func (m *MailInfo) String() string            { return proto.CompactTextString(m) }
func (*MailInfo) ProtoMessage()               {}
func (*MailInfo) Descriptor() ([]byte, []int) { return fileDescriptor8, []int{38} }

func (m *MailInfo) GetUid() uint64 {
	if m != nil && m.Uid != nil {
		return *m.Uid
	}
	return 0
}

func (m *MailInfo) GetTitle() string {
	if m != nil && m.Title != nil {
		return *m.Title
	}
	return ""
}

func (m *MailInfo) GetContent() string {
	if m != nil && m.Content != nil {
		return *m.Content
	}
	return ""
}

func (m *MailInfo) GetFlag() uint32 {
	if m != nil && m.Flag != nil {
		return *m.Flag
	}
	return 0
}

func (m *MailInfo) GetTime() uint32 {
	if m != nil && m.Time != nil {
		return *m.Time
	}
	return 0
}

func (m *MailInfo) GetSender() uint64 {
	if m != nil && m.Sender != nil {
		return *m.Sender
	}
	return 0
}

func (m *MailInfo) GetAttachs() []*ItemData {
	if m != nil {
		return m.Attachs
	}
	return nil
}

// 伤害校验信息
type BattleDmgInfo struct {
	HeroId           *uint64 `protobuf:"varint,1,req,name=hero_id" json:"hero_id,omitempty"`
	SkillId          *uint32 `protobuf:"varint,2,req,name=skill_id" json:"skill_id,omitempty"`
	Dmg              *uint32 `protobuf:"varint,3,req,name=dmg" json:"dmg,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *BattleDmgInfo) Reset()                    { *m = BattleDmgInfo{} }
func (m *BattleDmgInfo) String() string            { return proto.CompactTextString(m) }
func (*BattleDmgInfo) ProtoMessage()               {}
func (*BattleDmgInfo) Descriptor() ([]byte, []int) { return fileDescriptor8, []int{39} }

func (m *BattleDmgInfo) GetHeroId() uint64 {
	if m != nil && m.HeroId != nil {
		return *m.HeroId
	}
	return 0
}

func (m *BattleDmgInfo) GetSkillId() uint32 {
	if m != nil && m.SkillId != nil {
		return *m.SkillId
	}
	return 0
}

func (m *BattleDmgInfo) GetDmg() uint32 {
	if m != nil && m.Dmg != nil {
		return *m.Dmg
	}
	return 0
}

func init() {
	proto.RegisterType((*GateNetInfo)(nil), "SProtoSpace.gate_net_info")
	proto.RegisterType((*PlayerLeaveGameNtf)(nil), "SProtoSpace.player_leave_game_ntf")
	proto.RegisterType((*FgGetPlayerDataReq)(nil), "SProtoSpace.fg_get_player_data_req")
	proto.RegisterType((*NameCheck)(nil), "SProtoSpace.name_check")
	proto.RegisterType((*NameCheckAck)(nil), "SProtoSpace.name_check_ack")
	proto.RegisterType((*ChangeNameCheck)(nil), "SProtoSpace.change_name_check")
	proto.RegisterType((*ChangeNameCheckAck)(nil), "SProtoSpace.change_name_check_ack")
	proto.RegisterType((*GroupAreaInfo)(nil), "SProtoSpace.group_area_info")
	proto.RegisterType((*GroupHeroInfo)(nil), "SProtoSpace.group_hero_info")
	proto.RegisterType((*Iteminfo)(nil), "SProtoSpace.iteminfo")
	proto.RegisterType((*RoundOpSkill)(nil), "SProtoSpace.round_op_skill")
	proto.RegisterType((*RoundOpParam)(nil), "SProtoSpace.round_op_param")
	proto.RegisterType((*DamageData)(nil), "SProtoSpace.damage_data")
	proto.RegisterType((*ObjState)(nil), "SProtoSpace.obj_state")
	proto.RegisterType((*SkillDataDamage)(nil), "SProtoSpace.skill_data_damage")
	proto.RegisterType((*SkillDataCure)(nil), "SProtoSpace.skill_data_cure")
	proto.RegisterType((*SkillData)(nil), "SProtoSpace.skill_data")
	proto.RegisterType((*BuffDamageData)(nil), "SProtoSpace.buff_damage_data")
	proto.RegisterType((*BuffData)(nil), "SProtoSpace.buff_data")
	proto.RegisterType((*ItemData)(nil), "SProtoSpace.item_data")
	proto.RegisterType((*ClientSkillData)(nil), "SProtoSpace.client_skill_data")
	proto.RegisterType((*HeroBaseInfo)(nil), "SProtoSpace.hero_base_info")
	proto.RegisterType((*HeroAttrValue)(nil), "SProtoSpace.hero_attr_value")
	proto.RegisterType((*HeroBaseAttr)(nil), "SProtoSpace.hero_base_attr")
	proto.RegisterType((*BattleHeroInfo)(nil), "SProtoSpace.battle_hero_info")
	proto.RegisterType((*BattlePlayerInfo)(nil), "SProtoSpace.battle_player_info")
	proto.RegisterType((*PvpBattleInitData)(nil), "SProtoSpace.pvp_battle_init_data")
	proto.RegisterType((*CreateBattleData)(nil), "SProtoSpace.create_battle_data")
	proto.RegisterType((*RunningEntity)(nil), "SProtoSpace.running_entity")
	proto.RegisterType((*RunningQueue)(nil), "SProtoSpace.running_queue")
	proto.RegisterType((*ClientHeroInfo)(nil), "SProtoSpace.client_hero_info")
	proto.RegisterType((*ClientBattlePlayerInfo)(nil), "SProtoSpace.client_battle_player_info")
	proto.RegisterType((*ClientPvpBattleData)(nil), "SProtoSpace.client_pvp_battle_data")
	proto.RegisterType((*ClientBattleData)(nil), "SProtoSpace.client_battle_data")
	proto.RegisterType((*ClientSoulData)(nil), "SProtoSpace.client_soul_data")
	proto.RegisterType((*HeroShowData)(nil), "SProtoSpace.hero_show_data")
	proto.RegisterType((*ItemProperty)(nil), "SProtoSpace.item_property")
	proto.RegisterType((*RoleBaseBuyData)(nil), "SProtoSpace.role_base_buy_data")
	proto.RegisterType((*MailInfo)(nil), "SProtoSpace.mail_info")
	proto.RegisterType((*BattleDmgInfo)(nil), "SProtoSpace.battle_dmg_info")
	proto.RegisterEnum("SProtoSpace.UserStatus", UserStatus_name, UserStatus_value)
	proto.RegisterEnum("SProtoSpace.ECommonDefine", ECommonDefine_name, ECommonDefine_value)
	proto.RegisterEnum("SProtoSpace.ECreateResult", ECreateResult_name, ECreateResult_value)
	proto.RegisterEnum("SProtoSpace.EAreaState", EAreaState_name, EAreaState_value)
	proto.RegisterEnum("SProtoSpace.BaseMsgId", BaseMsgId_name, BaseMsgId_value)
	proto.RegisterEnum("SProtoSpace.ECrossServerType", ECrossServerType_name, ECrossServerType_value)
	proto.RegisterEnum("SProtoSpace.EAwardType", EAwardType_name, EAwardType_value)
	proto.RegisterEnum("SProtoSpace.EToyCurrencyType", EToyCurrencyType_name, EToyCurrencyType_value)
	proto.RegisterEnum("SProtoSpace.EOperaType", EOperaType_name, EOperaType_value)
	proto.RegisterEnum("SProtoSpace.EKickoutReason", EKickoutReason_name, EKickoutReason_value)
	proto.RegisterEnum("SProtoSpace.EBattleType", EBattleType_name, EBattleType_value)
	proto.RegisterEnum("SProtoSpace.EObjType", EObjType_name, EObjType_value)
	proto.RegisterEnum("SProtoSpace.EAttribute", EAttribute_name, EAttribute_value)
	proto.RegisterEnum("SProtoSpace.EBuffFlag", EBuffFlag_name, EBuffFlag_value)
	proto.RegisterEnum("SProtoSpace.EEffect", EEffect_name, EEffect_value)
	proto.RegisterEnum("SProtoSpace.ESkillTarget", ESkillTarget_name, ESkillTarget_value)
	proto.RegisterEnum("SProtoSpace.ESkillEffectType", ESkillEffectType_name, ESkillEffectType_value)
	proto.RegisterEnum("SProtoSpace.ECampType", ECampType_name, ECampType_value)
	proto.RegisterEnum("SProtoSpace.EPlayerType", EPlayerType_name, EPlayerType_value)
	proto.RegisterEnum("SProtoSpace.ERoleSexType", ERoleSexType_name, ERoleSexType_value)
	proto.RegisterEnum("SProtoSpace.ERoundOP", ERoundOP_name, ERoundOP_value)
	proto.RegisterEnum("SProtoSpace.ESoulSlot", ESoulSlot_name, ESoulSlot_value)
	proto.RegisterEnum("SProtoSpace.EOperatorType", EOperatorType_name, EOperatorType_value)
	proto.RegisterEnum("SProtoSpace.EOperatorDataType", EOperatorDataType_name, EOperatorDataType_value)
	proto.RegisterEnum("SProtoSpace.ESkillCfgOptType", ESkillCfgOptType_name, ESkillCfgOptType_value)
	proto.RegisterEnum("SProtoSpace.ESkinOpenType", ESkinOpenType_name, ESkinOpenType_value)
	proto.RegisterEnum("SProtoSpace.ERoleEventType", ERoleEventType_name, ERoleEventType_value)
	proto.RegisterEnum("SProtoSpace.EItemProType", EItemProType_name, EItemProType_value)
	proto.RegisterEnum("SProtoSpace.ERoleBuyType", ERoleBuyType_name, ERoleBuyType_value)
	proto.RegisterEnum("SProtoSpace.EValueType", EValueType_name, EValueType_value)
	proto.RegisterEnum("SProtoSpace.EHeroInfoChangeTag", EHeroInfoChangeTag_name, EHeroInfoChangeTag_value)
	proto.RegisterEnum("SProtoSpace.EGender", EGender_name, EGender_value)
	proto.RegisterEnum("SProtoSpace.ESkillDataType", ESkillDataType_name, ESkillDataType_value)
	proto.RegisterEnum("SProtoSpace.EItemPropertyType", EItemPropertyType_name, EItemPropertyType_value)
	proto.RegisterEnum("SProtoSpace.EItemFlagBits", EItemFlagBits_name, EItemFlagBits_value)
	proto.RegisterEnum("SProtoSpace.EMailFlag", EMailFlag_name, EMailFlag_value)
}

func init() { proto.RegisterFile("base.proto", fileDescriptor8) }

var fileDescriptor8 = []byte{
	// 3848 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xac, 0x79, 0x5f, 0x6f, 0xdb, 0x58,
	0x76, 0x78, 0x48, 0x49, 0xb6, 0x75, 0x64, 0xd9, 0xd7, 0x4c, 0xe2, 0x28, 0xff, 0x1d, 0xcd, 0x66,
	0xc6, 0xa3, 0x99, 0xcc, 0xce, 0x64, 0x67, 0x7f, 0x3f, 0x60, 0xba, 0x40, 0x4b, 0x4b, 0x57, 0x8e,
	0xd6, 0x12, 0x49, 0x50, 0x94, 0x13, 0x4f, 0x8b, 0xbd, 0xa0, 0xa5, 0x2b, 0x45, 0x13, 0x49, 0x54,
	0x28, 0xca, 0x89, 0x0b, 0x14, 0x58, 0xb4, 0xd8, 0x87, 0x3e, 0x2c, 0xfa, 0xd0, 0xb7, 0x16, 0x68,
	0xd1, 0xc7, 0x02, 0x45, 0x9f, 0xba, 0x40, 0x81, 0xf6, 0x43, 0xf4, 0x03, 0xf4, 0x1b, 0xf4, 0xb5,
	0x4f, 0x7d, 0x69, 0x71, 0xee, 0x25, 0x29, 0x92, 0xd2, 0x4c, 0xb3, 0x6d, 0x9f, 0xac, 0x7b, 0xfe,
	0xdd, 0xf3, 0xff, 0x9c, 0x4b, 0x03, 0x5c, 0xba, 0x0b, 0xfe, 0xc5, 0xdc, 0xf7, 0x02, 0x4f, 0x2b,
	0x75, 0x2d, 0xfc, 0xdb, 0x9d, 0xbb, 0x7d, 0x5e, 0xbd, 0x86, 0xf2, 0xc8, 0x0d, 0x38, 0x9b, 0xf1,
	0x80, 0x8d, 0x67, 0x43, 0x4f, 0x03, 0x50, 0xc7, 0x83, 0x8a, 0x72, 0xa4, 0x1e, 0xe7, 0xc5, 0xef,
	0x79, 0x45, 0x3d, 0x52, 0x8f, 0x8b, 0xda, 0x2e, 0xe4, 0xe7, 0x9e, 0x1f, 0x54, 0x72, 0x47, 0xea,
	0x71, 0x41, 0xd3, 0x00, 0x46, 0xbe, 0xb7, 0x9c, 0xb3, 0x99, 0x3b, 0xe5, 0x95, 0xbc, 0xa0, 0x28,
	0x41, 0x6e, 0xc6, 0xdf, 0x55, 0x0a, 0x47, 0xea, 0xf1, 0x8e, 0x56, 0x86, 0xc2, 0x22, 0x70, 0x03,
	0x5e, 0xd9, 0x4a, 0xd1, 0x8f, 0x67, 0x03, 0xfe, 0xbe, 0xb2, 0x7d, 0xa4, 0x1e, 0x97, 0xab, 0x7f,
	0x04, 0xb7, 0xe7, 0x13, 0xf7, 0x9a, 0xfb, 0x6c, 0xc2, 0xdd, 0x2b, 0xce, 0x46, 0xee, 0x94, 0xb3,
	0x59, 0x30, 0x4c, 0xa9, 0x70, 0x00, 0x45, 0xb7, 0xdf, 0xf7, 0x96, 0xb3, 0x60, 0x3c, 0x10, 0x9a,
	0x94, 0xb5, 0x7d, 0xd8, 0x96, 0xb2, 0x06, 0x42, 0x99, 0x3c, 0xde, 0x35, 0xe1, 0x57, 0x7c, 0x22,
	0xf4, 0x28, 0x6b, 0x7b, 0xb0, 0xf5, 0x9a, 0xfb, 0xde, 0x78, 0x20, 0x54, 0x29, 0x6b, 0xb7, 0xa1,
	0x3c, 0x71, 0x17, 0xc1, 0xc4, 0x1b, 0x8d, 0x67, 0x83, 0x48, 0xa5, 0x72, 0xf5, 0x33, 0x38, 0x1c,
	0x8e, 0xd8, 0x88, 0x07, 0x2c, 0xd4, 0x62, 0xe0, 0x06, 0x2e, 0xf3, 0xf9, 0x5b, 0xbc, 0x33, 0x04,
	0x09, 0x35, 0x94, 0xe3, 0x7c, 0xb5, 0x06, 0x80, 0x96, 0xb2, 0xfe, 0x6b, 0xde, 0x7f, 0x83, 0xbe,
	0x10, 0x76, 0x2b, 0xc2, 0xee, 0x3d, 0xd8, 0x72, 0x83, 0xc0, 0xed, 0xbf, 0xae, 0xa8, 0x47, 0xca,
	0x71, 0xb1, 0xfa, 0x3b, 0xb0, 0xb7, 0xa2, 0x65, 0xee, 0x1a, 0x7d, 0x09, 0x72, 0x3e, 0x0f, 0x84,
	0x31, 0x85, 0x04, 0x73, 0x5e, 0x30, 0xb7, 0xe0, 0xa0, 0xff, 0xda, 0x9d, 0x8d, 0x38, 0x4b, 0xdc,
	0x47, 0x60, 0x67, 0xc6, 0xdf, 0xb1, 0x84, 0x0c, 0x02, 0x3b, 0xde, 0x64, 0x20, 0x21, 0x6a, 0x04,
	0xe9, 0x4f, 0xc6, 0x5c, 0xf8, 0x29, 0x27, 0x0c, 0xfc, 0x16, 0x6e, 0xaf, 0x89, 0x12, 0xea, 0xfc,
	0x8f, 0xc4, 0x45, 0x6a, 0xa3, 0x8f, 0x0b, 0xd5, 0x9f, 0xc1, 0xbe, 0x8c, 0xbf, 0xeb, 0x73, 0x57,
	0x26, 0x0e, 0x81, 0x9d, 0x30, 0x2c, 0x8b, 0x8a, 0x72, 0x94, 0x3b, 0xce, 0x6b, 0x77, 0x60, 0x5f,
	0xa0, 0x13, 0x99, 0x22, 0x84, 0x57, 0x7f, 0x37, 0xe2, 0xc6, 0x38, 0x49, 0xee, 0x44, 0x50, 0x65,
	0xe0, 0x57, 0x51, 0x54, 0xa3, 0xeb, 0x27, 0xfc, 0x2a, 0x34, 0xad, 0x03, 0x3b, 0xe3, 0x80, 0x4f,
	0x05, 0xe7, 0x2e, 0xe4, 0x83, 0xeb, 0xb9, 0xb4, 0xa4, 0x10, 0xe6, 0x4e, 0xcc, 0x32, 0x5b, 0x4e,
	0xc3, 0x8c, 0xbd, 0x07, 0xfb, 0x3e, 0x5f, 0x78, 0x93, 0x2b, 0x1e, 0xde, 0x3a, 0x10, 0x1e, 0x2f,
	0x7c, 0xa3, 0x7c, 0x59, 0xa5, 0xb0, 0xe7, 0x7b, 0xcb, 0xd9, 0x80, 0x79, 0x73, 0xb6, 0x78, 0x33,
	0x9e, 0x4c, 0xf0, 0x76, 0xef, 0xf2, 0x3b, 0x16, 0x6a, 0x53, 0xc6, 0x94, 0x08, 0x5c, 0x1f, 0x93,
	0x25, 0x96, 0x4e, 0x60, 0x47, 0xd0, 0xb2, 0xd8, 0xe1, 0x6e, 0x42, 0xcc, 0xdc, 0xf5, 0xdd, 0xa9,
	0xf6, 0x51, 0x42, 0xb7, 0xbd, 0xe7, 0xb7, 0xbf, 0x48, 0x54, 0xde, 0x17, 0xd4, 0x46, 0x5a, 0xd3,
	0xd2, 0x6a, 0x50, 0x10, 0x82, 0x44, 0xfa, 0x94, 0x9e, 0xdf, 0x4f, 0x51, 0xa5, 0xf5, 0xaa, 0x9e,
	0x41, 0x69, 0xe0, 0x4e, 0xdd, 0x11, 0x17, 0xd9, 0xba, 0xa6, 0xe6, 0x1e, 0x6c, 0x49, 0x74, 0xa8,
	0x23, 0x80, 0xfa, 0x7a, 0x1e, 0xc6, 0x0f, 0x23, 0xea, 0x8f, 0x83, 0x71, 0xdf, 0x95, 0x85, 0xb2,
	0x53, 0xfd, 0x06, 0x8a, 0xc8, 0x2d, 0xea, 0x74, 0x93, 0xc5, 0x97, 0xcb, 0xe1, 0x90, 0x4d, 0xc6,
	0x0b, 0xcc, 0xd5, 0x5c, 0x4a, 0x5a, 0xa1, 0x3a, 0x84, 0x03, 0x69, 0xbd, 0xa8, 0x1a, 0x79, 0x69,
	0xda, 0x4b, 0xca, 0x9a, 0x97, 0xd4, 0x8c, 0x8e, 0xb9, 0x84, 0x8e, 0xf9, 0x35, 0x1d, 0x45, 0x1f,
	0xa9, 0x0e, 0x60, 0x3f, 0x71, 0x4f, 0x7f, 0xe9, 0x7f, 0xf8, 0x2d, 0xee, 0x60, 0xc0, 0x62, 0xeb,
	0x7f, 0xf8, 0x96, 0xbf, 0x56, 0x00, 0x56, 0xd7, 0x68, 0x9f, 0xa6, 0xc2, 0x96, 0x0e, 0x08, 0xed,
	0x22, 0x5d, 0xc3, 0x0d, 0x5c, 0xe7, 0x7a, 0xce, 0xb5, 0xaf, 0x61, 0x37, 0x62, 0x0c, 0xfd, 0x8e,
	0x31, 0x7c, 0x94, 0x62, 0x59, 0x77, 0xd4, 0x97, 0xd1, 0x75, 0x68, 0x50, 0x25, 0x27, 0x78, 0x1e,
	0x7c, 0x1f, 0x0f, 0xd2, 0x54, 0x5d, 0x20, 0x22, 0x1c, 0xff, 0x67, 0xd1, 0xc7, 0x8a, 0x13, 0x12,
	0xa3, 0x3e, 0x59, 0xfd, 0x3c, 0x8c, 0xf8, 0x46, 0xd9, 0x09, 0x6a, 0x21, 0xbc, 0xfa, 0x08, 0x8a,
	0x58, 0x82, 0x92, 0xfa, 0x00, 0x0a, 0x73, 0xdf, 0x9b, 0x87, 0x85, 0x7f, 0xa2, 0x12, 0xa5, 0xfa,
	0x33, 0x38, 0x90, 0x0d, 0x84, 0x25, 0x1c, 0xbb, 0xea, 0xec, 0xe5, 0x55, 0xd7, 0x96, 0x8d, 0x70,
	0x17, 0xf2, 0x8b, 0x89, 0x17, 0xce, 0x97, 0x6a, 0x17, 0xf6, 0x44, 0x95, 0xe2, 0xd8, 0x8a, 0x1b,
	0x44, 0x54, 0xb7, 0xb2, 0x41, 0xdc, 0x84, 0x52, 0xc0, 0xa7, 0xf3, 0x09, 0x4e, 0xaf, 0x38, 0xec,
	0xb1, 0xd0, 0x5c, 0x2c, 0x34, 0x70, 0xfd, 0xb0, 0x69, 0xfd, 0x02, 0xf6, 0x85, 0x08, 0x37, 0x08,
	0x7c, 0x76, 0xe5, 0x4e, 0x96, 0x5c, 0x7b, 0x9a, 0x8a, 0xf4, 0x9d, 0x74, 0xa4, 0xf5, 0x20, 0xf0,
	0xc7, 0x97, 0x4b, 0x51, 0x1c, 0xb9, 0x2b, 0x57, 0x16, 0x28, 0x36, 0x0c, 0xed, 0x16, 0x14, 0xaf,
	0xdc, 0x09, 0xf3, 0xdd, 0x60, 0xec, 0x89, 0xf0, 0x89, 0x36, 0xf2, 0x27, 0x4a, 0x52, 0x6b, 0xbc,
	0x05, 0xdd, 0x38, 0x75, 0xdf, 0x63, 0x1a, 0xca, 0xf6, 0x54, 0x82, 0xdc, 0x80, 0x0f, 0x43, 0x93,
	0x4b, 0x90, 0x73, 0x83, 0x37, 0xa1, 0xaa, 0x38, 0x30, 0xe7, 0x9c, 0x0f, 0xa4, 0xae, 0xa8, 0x39,
	0xc6, 0x4b, 0x84, 0xa6, 0x10, 0x45, 0x8f, 0x0d, 0xa6, 0xa3, 0x70, 0xa0, 0x22, 0x6f, 0xbf, 0x2f,
	0x26, 0x69, 0x41, 0xb6, 0xe6, 0x45, 0x65, 0x47, 0x58, 0xf9, 0xa7, 0x2a, 0x90, 0x4b, 0x37, 0x08,
	0x26, 0x3c, 0xd1, 0x5e, 0x3f, 0x85, 0x3c, 0x2a, 0x25, 0xb4, 0xc8, 0xb6, 0x98, 0x8c, 0xa3, 0x7f,
	0x0c, 0xc5, 0x58, 0x7f, 0x51, 0xf8, 0xd9, 0xd4, 0xcc, 0xfa, 0xf0, 0xc7, 0x50, 0x5c, 0x78, 0xcb,
	0x89, 0x64, 0xc8, 0x7d, 0x00, 0xc3, 0xd7, 0xb0, 0x27, 0x18, 0x16, 0xcb, 0x71, 0x20, 0xb9, 0xf2,
	0x1f, 0xc0, 0xf5, 0x3c, 0x59, 0xa2, 0x95, 0x82, 0xe0, 0x48, 0xd7, 0xd9, 0x5a, 0xbe, 0x55, 0xff,
	0x56, 0x01, 0x2d, 0xf4, 0x45, 0x34, 0xd1, 0xb3, 0x3b, 0x4e, 0x34, 0x9b, 0xe5, 0xd8, 0xcb, 0xe4,
	0xcf, 0x33, 0x39, 0x84, 0xf8, 0x22, 0xd4, 0xf0, 0x61, 0xea, 0xbe, 0x35, 0x2f, 0xef, 0x42, 0x7e,
	0xb4, 0x88, 0xf7, 0x8e, 0x67, 0xb0, 0x25, 0x2f, 0x15, 0x21, 0xfb, 0xef, 0x98, 0xab, 0x7f, 0x00,
	0xb7, 0xe6, 0x57, 0x73, 0x16, 0xc2, 0xc7, 0x33, 0x0c, 0x37, 0xd6, 0xcc, 0x97, 0xb0, 0x2d, 0xc5,
	0xc8, 0xea, 0x2a, 0x3d, 0x7f, 0xbc, 0x49, 0x4e, 0xd2, 0x3c, 0x0d, 0x40, 0xb0, 0xcf, 0xbd, 0x77,
	0xdc, 0x97, 0xb9, 0x56, 0x7d, 0x0b, 0x5a, 0xdf, 0xe7, 0x58, 0x2b, 0x21, 0x83, 0x90, 0xfd, 0x71,
	0x2a, 0xfd, 0x2b, 0xe9, 0xf4, 0x3f, 0x11, 0x84, 0xa2, 0xcb, 0xfd, 0x04, 0x76, 0x50, 0x37, 0xe1,
	0x79, 0xd9, 0xe1, 0x9e, 0xa4, 0x68, 0x37, 0x29, 0x5e, 0xfd, 0x0a, 0xf6, 0xfc, 0xe5, 0x6c, 0x36,
	0x9e, 0x8d, 0x18, 0xee, 0x11, 0xc1, 0x35, 0x7a, 0xd7, 0xbb, 0xfc, 0x2e, 0xd9, 0xb5, 0xe7, 0xde,
	0x62, 0x1c, 0x8c, 0xbd, 0x59, 0xa8, 0x65, 0x1b, 0xca, 0x11, 0xcb, 0xdb, 0x25, 0x5f, 0x72, 0x19,
	0x8f, 0x59, 0xf0, 0x3a, 0x2c, 0x9f, 0xcf, 0x61, 0x9b, 0xcf, 0xc6, 0xc1, 0x98, 0x2f, 0xc2, 0xcc,
	0xcc, 0x0c, 0xcb, 0xd4, 0x75, 0xd8, 0x33, 0xc3, 0x94, 0x48, 0x85, 0x68, 0xb9, 0x8c, 0x83, 0x1f,
	0x2b, 0x24, 0xbb, 0x47, 0xa6, 0xa5, 0xe4, 0xd2, 0x2d, 0x25, 0x9f, 0x6a, 0x29, 0xa2, 0x30, 0x31,
	0xc1, 0xee, 0x86, 0x77, 0xfc, 0x6f, 0xf2, 0x0c, 0xab, 0xdd, 0x9d, 0xce, 0xc3, 0x2b, 0xa2, 0xa8,
	0x14, 0x36, 0x45, 0xc5, 0x12, 0xf2, 0x45, 0x54, 0x56, 0xd9, 0xb9, 0xb5, 0x21, 0x3b, 0xb3, 0xa6,
	0x57, 0x39, 0x1c, 0x86, 0xb0, 0x44, 0xb8, 0x44, 0x1a, 0xfc, 0xff, 0x6c, 0x8a, 0x7d, 0xbc, 0x49,
	0xd2, 0x07, 0x66, 0xda, 0x02, 0xb4, 0x34, 0xc3, 0x6f, 0x95, 0x69, 0x3f, 0x5d, 0xcb, 0xb4, 0x8f,
	0x36, 0xe9, 0x92, 0xb1, 0xa0, 0xfa, 0x79, 0x1c, 0x6a, 0xd1, 0x59, 0x32, 0xc3, 0x26, 0x1f, 0x4f,
	0x17, 0xa9, 0xe2, 0xdf, 0xa8, 0x61, 0xa3, 0x5e, 0xbc, 0xf6, 0xde, 0x49, 0xe2, 0x74, 0x5e, 0xfc,
	0xd6, 0xb3, 0x45, 0x7b, 0x16, 0x2d, 0x71, 0x1f, 0xd4, 0x98, 0xb4, 0xcf, 0x20, 0x8f, 0x8a, 0xfe,
	0x50, 0xe0, 0x56, 0x86, 0x94, 0x20, 0xc7, 0xdf, 0xcf, 0xc3, 0x5e, 0x8f, 0x8b, 0xcd, 0x3b, 0xf7,
	0x0d, 0x9f, 0x89, 0x76, 0xbf, 0xa3, 0x7d, 0x05, 0x25, 0x79, 0x96, 0x9d, 0xb4, 0xf8, 0x01, 0x9d,
	0x74, 0x0f, 0xb6, 0x26, 0x5e, 0xff, 0x0d, 0x1f, 0x54, 0x40, 0x88, 0xb8, 0x09, 0xa5, 0xb0, 0x37,
	0x04, 0xe3, 0x29, 0xaf, 0x94, 0x8e, 0x94, 0xe3, 0x72, 0xf5, 0x05, 0x94, 0xc5, 0x7c, 0xc7, 0xb9,
	0xce, 0xfd, 0xe0, 0x5a, 0xfb, 0x24, 0x15, 0xc1, 0xbb, 0xe9, 0x08, 0xb6, 0x02, 0x3e, 0xb5, 0x7c,
	0x4f, 0x84, 0x30, 0x33, 0x2c, 0xab, 0xcf, 0x40, 0xf3, 0xbd, 0x09, 0x97, 0x23, 0xe6, 0x72, 0x79,
	0x2d, 0x8d, 0xba, 0x03, 0xfb, 0xf8, 0x5b, 0x64, 0x8e, 0xb8, 0x77, 0x21, 0x9e, 0x5a, 0x85, 0xea,
	0xaf, 0x15, 0x28, 0x4e, 0xdd, 0xf1, 0x44, 0x66, 0x58, 0x09, 0x72, 0xcb, 0xe8, 0x15, 0x86, 0x11,
	0x08, 0xc6, 0xc1, 0x44, 0x6e, 0x59, 0x45, 0x5c, 0x09, 0xfa, 0xde, 0x2c, 0xe0, 0xb3, 0x40, 0xcc,
	0x60, 0xf1, 0x46, 0x1d, 0x4e, 0xdc, 0x91, 0x58, 0xec, 0xcb, 0xe2, 0x61, 0x80, 0xf6, 0x14, 0xc4,
	0x69, 0x0f, 0xb6, 0x16, 0x7c, 0x36, 0x10, 0xdd, 0x18, 0x65, 0x7d, 0x02, 0xdb, 0xf2, 0xe1, 0xb5,
	0xa8, 0x6c, 0x0b, 0x9f, 0x1d, 0xa6, 0x2c, 0x8a, 0x77, 0x9b, 0xaa, 0x0e, 0xfb, 0x51, 0xa6, 0x4d,
	0x47, 0xdf, 0xb3, 0x8b, 0xac, 0xef, 0x9f, 0x38, 0xe8, 0xa7, 0x23, 0xd9, 0x42, 0x6a, 0x4f, 0x01,
	0x7a, 0x0b, 0xee, 0x77, 0x03, 0x37, 0x58, 0x2e, 0xb4, 0x12, 0x6c, 0x9b, 0xcd, 0x66, 0xbb, 0x65,
	0x50, 0x72, 0x43, 0x03, 0xd8, 0x32, 0x0d, 0xf1, 0x5b, 0xa9, 0xfd, 0x87, 0x0a, 0x65, 0x5e, 0xf7,
	0xa6, 0x53, 0x6f, 0xd6, 0xe0, 0xc3, 0xf1, 0x8c, 0x6b, 0x77, 0x40, 0xc3, 0xf5, 0x41, 0xb8, 0x4f,
	0x26, 0xec, 0xf8, 0x0f, 0x39, 0xf9, 0xa5, 0xa2, 0x1d, 0xc2, 0x41, 0x8c, 0xb8, 0x74, 0x47, 0x21,
	0x9c, 0x68, 0x15, 0xb8, 0x25, 0xf6, 0x0d, 0x41, 0x7b, 0x3d, 0xbd, 0xf4, 0x26, 0x12, 0xb5, 0xa5,
	0xdd, 0x81, 0x9b, 0x31, 0x87, 0xd4, 0x55, 0x20, 0x76, 0xb5, 0xbb, 0x70, 0x3b, 0x46, 0x0c, 0xfd,
	0x31, 0x9f, 0x0d, 0x16, 0x12, 0xf5, 0x3c, 0xe2, 0x11, 0xd2, 0xa6, 0xde, 0x80, 0x87, 0x3c, 0x39,
	0xed, 0x3e, 0xdc, 0x41, 0xc4, 0xc0, 0x1d, 0x4f, 0xae, 0x99, 0xdb, 0x0f, 0xc6, 0x57, 0xe3, 0xe0,
	0x5a, 0x22, 0x8f, 0x22, 0xae, 0x80, 0xbb, 0x53, 0xc1, 0x1a, 0x8a, 0x2b, 0x69, 0x87, 0xa1, 0x35,
	0x0b, 0xe6, 0xf3, 0x77, 0xae, 0x3f, 0x90, 0x70, 0xd0, 0xee, 0x49, 0x0d, 0x26, 0xb8, 0xd4, 0x4f,
	0xdd, 0x39, 0xbb, 0xf4, 0xde, 0x87, 0x06, 0xa9, 0xda, 0x63, 0xb8, 0x87, 0xb8, 0x05, 0xbf, 0xe2,
	0xb3, 0x81, 0x9b, 0xbd, 0xec, 0x9f, 0x0b, 0x91, 0xd0, 0x70, 0x9d, 0x1e, 0x8e, 0x22, 0x15, 0x6f,
	0xc1, 0x2e, 0xc2, 0x47, 0xe2, 0x5d, 0xbb, 0x9c, 0x92, 0xff, 0xfc, 0xf3, 0x7f, 0xfb, 0xd7, 0x18,
	0xfa, 0x9d, 0x3b, 0xe0, 0x2b, 0xe8, 0x3d, 0x95, 0x28, 0xb5, 0xbf, 0x54, 0xd0, 0xf9, 0xa2, 0x0c,
	0x6c, 0xbe, 0x58, 0x4e, 0x02, 0xed, 0x16, 0x90, 0xb0, 0x2c, 0x7c, 0x01, 0x60, 0xde, 0x1b, 0x72,
	0x03, 0xef, 0x4b, 0x43, 0x87, 0xee, 0x78, 0x42, 0x14, 0x74, 0x49, 0x1a, 0x3e, 0x58, 0xce, 0x27,
	0xe3, 0xbe, 0x1b, 0x70, 0xa2, 0x6a, 0x47, 0xf0, 0x20, 0x8d, 0x5c, 0xf0, 0x19, 0x0e, 0xbe, 0x2b,
	0xce, 0xde, 0x79, 0xfe, 0x80, 0xe4, 0xb4, 0x87, 0x70, 0x37, 0x43, 0x81, 0xaf, 0x32, 0xc6, 0x7d,
	0xdf, 0xf3, 0x49, 0xbe, 0xf6, 0x1a, 0x80, 0xea, 0x3e, 0x77, 0xbb, 0xe2, 0xad, 0x76, 0x13, 0xf6,
	0x75, 0x9b, 0xea, 0xac, 0xeb, 0xe8, 0x0e, 0x65, 0xa7, 0xa6, 0xd9, 0x20, 0x4a, 0x06, 0x78, 0xd2,
	0xeb, 0x5e, 0x10, 0x15, 0x6d, 0x48, 0x00, 0xeb, 0xb6, 0xf9, 0xb2, 0x41, 0x72, 0xda, 0x3d, 0x38,
	0x4c, 0x40, 0x3b, 0x7a, 0xcb, 0x70, 0xa8, 0xa1, 0x1b, 0x75, 0x4a, 0xf2, 0xb5, 0x7f, 0x57, 0xa0,
	0x24, 0x2a, 0x75, 0xba, 0x18, 0xb1, 0xf1, 0x40, 0x3b, 0x80, 0x72, 0xe2, 0xf3, 0xc1, 0x78, 0x40,
	0x14, 0xed, 0x36, 0x1c, 0xa4, 0xbf, 0x28, 0x20, 0x58, 0xc5, 0xdc, 0x5b, 0xff, 0xde, 0x30, 0x46,
	0xe3, 0x1e, 0x40, 0x65, 0xe3, 0x97, 0x08, 0xc4, 0xe6, 0x11, 0xbb, 0xf1, 0x3b, 0x10, 0x62, 0x0b,
	0x58, 0x02, 0x7d, 0x51, 0x12, 0x4c, 0x7c, 0xbd, 0xea, 0x7b, 0x58, 0x64, 0xe4, 0x5f, 0xf6, 0xb5,
	0xa7, 0x70, 0x94, 0x45, 0x0c, 0x3d, 0x1f, 0xf3, 0x8a, 0x0f, 0x98, 0xcf, 0xdf, 0x22, 0xd9, 0x3f,
	0x90, 0x1f, 0x26, 0x0b, 0x75, 0xf8, 0x0d, 0xa9, 0xfd, 0x3e, 0x10, 0x5a, 0xf7, 0xbd, 0xc5, 0xa2,
	0xcb, 0xfd, 0xab, 0x70, 0xbe, 0x1e, 0x82, 0x76, 0xa2, 0xd7, 0xcf, 0x98, 0x61, 0xda, 0x1d, 0xbd,
	0xcd, 0xba, 0xd4, 0x3e, 0xa7, 0xb6, 0x4c, 0x81, 0xba, 0x6d, 0x76, 0xbb, 0xac, 0x6d, 0xd6, 0x57,
	0x70, 0x05, 0x13, 0x5f, 0xc2, 0x4f, 0xdb, 0xe6, 0xc9, 0x0a, 0xa1, 0xd6, 0xfe, 0x4c, 0xc1, 0xf0,
	0xe1, 0x9d, 0x61, 0x83, 0x04, 0xfd, 0xa5, 0x6e, 0x37, 0x58, 0xdd, 0x6c, 0x19, 0x44, 0xd1, 0x34,
	0xd8, 0x93, 0xe7, 0x46, 0x4b, 0xef, 0x98, 0x46, 0xa3, 0x4b, 0x54, 0x11, 0xcd, 0x90, 0xc6, 0xb6,
	0xba, 0x8c, 0xbe, 0xb2, 0x48, 0x0e, 0x2f, 0x96, 0x40, 0xc7, 0xbc, 0x60, 0xf5, 0x9e, 0x6d, 0x53,
	0xa3, 0x7e, 0x41, 0xf2, 0x2b, 0x81, 0x2d, 0x87, 0x76, 0x48, 0x61, 0x75, 0x7e, 0x41, 0x6d, 0x93,
	0x6c, 0x69, 0x04, 0x76, 0xe5, 0x99, 0x1a, 0xd4, 0x3e, 0xbd, 0x20, 0xdb, 0xb5, 0x3f, 0x56, 0x81,
	0x50, 0xc7, 0xbb, 0xae, 0x2f, 0x7d, 0x9f, 0xcf, 0xfa, 0xd7, 0x91, 0xbd, 0x49, 0xc1, 0x4c, 0xb7,
	0xa9, 0xa1, 0x13, 0x65, 0x0d, 0x4e, 0x5f, 0x59, 0xb4, 0x41, 0x54, 0xcc, 0x83, 0x14, 0xbc, 0x63,
	0x9e, 0xe8, 0xb2, 0x39, 0xa4, 0xc0, 0x5d, 0xb3, 0xde, 0xa2, 0xce, 0x45, 0xdd, 0x34, 0x48, 0xfe,
	0xfb, 0x90, 0x68, 0x5f, 0x01, 0x33, 0x28, 0x85, 0xac, 0xdb, 0x17, 0x5d, 0x47, 0x6f, 0xcb, 0xee,
	0x95, 0xc2, 0x9c, 0xb7, 0x4e, 0xcd, 0x9e, 0x4d, 0xb6, 0x31, 0x79, 0x52, 0x08, 0x8b, 0x52, 0x5b,
	0x3f, 0xa5, 0xc2, 0x61, 0x3b, 0x6b, 0xd8, 0x6f, 0xcd, 0x46, 0x4b, 0xaf, 0xb3, 0xae, 0xd9, 0x6b,
	0x93, 0x62, 0xcd, 0x00, 0xa0, 0xe6, 0x9c, 0xfb, 0xf2, 0x25, 0xaf, 0xc1, 0x9e, 0x69, 0x51, 0x5b,
	0x67, 0xce, 0x85, 0x45, 0x99, 0xde, 0x68, 0x90, 0x1b, 0x68, 0x61, 0x02, 0xd6, 0xa0, 0x6d, 0xea,
	0x50, 0x59, 0x00, 0x09, 0x70, 0xcf, 0x6a, 0xe8, 0x0e, 0x25, 0x6a, 0xed, 0x53, 0xd8, 0xe3, 0x67,
	0xe3, 0xfe, 0x1b, 0x6f, 0x19, 0xd8, 0xdc, 0x5d, 0x78, 0x33, 0x54, 0x3b, 0x05, 0x60, 0xe2, 0x23,
	0x24, 0x51, 0x6a, 0x55, 0x28, 0x25, 0xb7, 0x9e, 0x9b, 0xb0, 0x7f, 0xa2, 0x3b, 0x4e, 0x9b, 0x4a,
	0x89, 0xd6, 0xb9, 0x45, 0x94, 0x5a, 0x13, 0x76, 0xa8, 0x79, 0xf9, 0x9d, 0x20, 0x38, 0x80, 0xb2,
	0x79, 0xf2, 0x73, 0x89, 0x35, 0x4c, 0x31, 0x39, 0x92, 0x20, 0x11, 0x67, 0x05, 0xab, 0x3d, 0x06,
	0x75, 0x4c, 0xa3, 0xeb, 0x88, 0xec, 0xfb, 0xbb, 0x3c, 0x66, 0x5f, 0xfc, 0x96, 0xdd, 0x85, 0x1d,
	0xdd, 0x71, 0x6c, 0xa6, 0x3b, 0x67, 0x44, 0x11, 0xa9, 0x82, 0xa7, 0x8e, 0xfe, 0xea, 0x85, 0x45,
	0xd4, 0x18, 0xdb, 0xa0, 0x4d, 0x92, 0x8b, 0xb1, 0x5d, 0x8b, 0xd2, 0x06, 0xc1, 0x01, 0x5c, 0x14,
	0xe7, 0xba, 0xdd, 0x72, 0x48, 0x01, 0x55, 0x88, 0x8f, 0xac, 0xd1, 0x39, 0x25, 0x5b, 0x2b, 0xe9,
	0xf5, 0x3a, 0xd9, 0x8e, 0x4f, 0x36, 0xed, 0x92, 0x1d, 0x6d, 0x1f, 0x4a, 0x52, 0x76, 0xe7, 0x94,
	0xf5, 0x2c, 0x52, 0x8c, 0xf9, 0x11, 0xd0, 0x30, 0x5f, 0x1a, 0x04, 0x44, 0xde, 0x23, 0xe8, 0x94,
	0x3a, 0x11, 0x5d, 0x09, 0xfd, 0x9d, 0x02, 0x0a, 0xda, 0xdd, 0x98, 0xb6, 0x75, 0x6a, 0x98, 0x36,
	0x15, 0x2a, 0x97, 0xd1, 0xe5, 0x91, 0x4e, 0x49, 0xc4, 0x5e, 0x2c, 0xc4, 0xb1, 0xa9, 0xee, 0x30,
	0xda, 0x6c, 0xd2, 0xba, 0x43, 0xf6, 0x71, 0xfc, 0xc5, 0xb2, 0x53, 0x28, 0x22, 0xca, 0x26, 0xd4,
	0xde, 0x32, 0x8d, 0x06, 0x39, 0x10, 0xed, 0x14, 0x21, 0x16, 0x35, 0xa8, 0x63, 0xeb, 0x4e, 0xcb,
	0x34, 0x88, 0x16, 0x7b, 0xc9, 0xd2, 0x6d, 0xfb, 0x82, 0xdc, 0x14, 0xf5, 0x1c, 0xfa, 0x94, 0x59,
	0xe6, 0x4b, 0x6a, 0x93, 0x47, 0xb1, 0xae, 0x08, 0x0b, 0xab, 0xf0, 0x71, 0xec, 0x90, 0x7a, 0xcf,
	0x66, 0x2f, 0x2c, 0x72, 0x14, 0x73, 0xea, 0x86, 0xd3, 0x92, 0x4e, 0x7e, 0x12, 0x2b, 0xb8, 0x32,
	0x86, 0x89, 0x9b, 0x49, 0x15, 0x87, 0xc6, 0x06, 0x5b, 0x43, 0xf4, 0x47, 0x58, 0x4e, 0xb1, 0x69,
	0x51, 0x88, 0xd0, 0xa1, 0x3f, 0x12, 0x03, 0x60, 0x0d, 0x23, 0xbc, 0xfa, 0xb4, 0xf6, 0xf7, 0x0a,
	0x14, 0xe9, 0xc9, 0x72, 0x38, 0x6c, 0x4e, 0xdc, 0x91, 0xc8, 0xcc, 0x5e, 0xb3, 0xc9, 0x9a, 0x6d,
	0xfd, 0x94, 0x35, 0x5a, 0xdf, 0x7e, 0x7b, 0x21, 0xf3, 0x7f, 0x05, 0xec, 0xb6, 0xda, 0x14, 0x47,
	0x87, 0x18, 0x36, 0x2b, 0x70, 0xab, 0xd3, 0xe9, 0x19, 0x94, 0xe4, 0xd2, 0x12, 0xba, 0x6d, 0x4a,
	0x2d, 0x92, 0x4f, 0x03, 0x1d, 0xbd, 0x67, 0x38, 0xa2, 0xd5, 0xdf, 0x4c, 0x50, 0xbe, 0xd0, 0xd1,
	0x1c, 0x91, 0x54, 0x0f, 0xa0, 0x92, 0x40, 0x58, 0x3d, 0xc7, 0xa1, 0x76, 0xcb, 0x38, 0x15, 0xd8,
	0xed, 0xda, 0xaf, 0xb6, 0x61, 0x9b, 0xd2, 0xe1, 0x90, 0xf7, 0x03, 0x4c, 0x50, 0xda, 0x6c, 0xc6,
	0x8a, 0xee, 0x43, 0x09, 0x8f, 0x2b, 0x15, 0xf7, 0x00, 0x10, 0x10, 0x2b, 0x17, 0xd2, 0x27, 0xd4,
	0xc2, 0x63, 0x18, 0x70, 0x21, 0xbf, 0x80, 0x41, 0x91, 0xc0, 0xba, 0x79, 0x4e, 0x45, 0xa0, 0xb6,
	0xd0, 0x54, 0x01, 0xd3, 0x8d, 0x86, 0xd9, 0x09, 0x0d, 0xd8, 0x8e, 0xa4, 0xc9, 0xe3, 0x0e, 0xa6,
	0xb7, 0x10, 0x1e, 0x5b, 0x52, 0xc4, 0x56, 0x2a, 0x40, 0x69, 0x1b, 0x00, 0x4d, 0x47, 0xb8, 0xde,
	0x68, 0xc8, 0x8c, 0x61, 0xe7, 0x7a, 0xbb, 0x47, 0x49, 0x69, 0x1d, 0x61, 0x99, 0x2d, 0xc3, 0x21,
	0xbb, 0x11, 0xa2, 0xa3, 0xb7, 0x69, 0xb2, 0x58, 0xca, 0x98, 0x2f, 0x6b, 0x08, 0x11, 0xda, 0xbd,
	0x08, 0xd5, 0xa4, 0x59, 0xae, 0x7d, 0xec, 0xcb, 0x1b, 0x50, 0x82, 0x8f, 0x44, 0x77, 0x19, 0x54,
	0x4f, 0x15, 0xe6, 0x41, 0x24, 0x30, 0x85, 0x10, 0x3c, 0x5a, 0x64, 0x69, 0x33, 0xcd, 0x72, 0x13,
	0x93, 0x32, 0x0b, 0x17, 0x1c, 0xb7, 0xa2, 0x5b, 0xb0, 0x97, 0x25, 0x59, 0x6e, 0x47, 0x41, 0x43,
	0x1f, 0xbc, 0xb0, 0xc8, 0x61, 0x14, 0x55, 0x3c, 0x63, 0x13, 0xbb, 0xb3, 0x8a, 0x50, 0xa3, 0x57,
	0xa7, 0x02, 0x56, 0x49, 0x12, 0x61, 0xfd, 0xdf, 0xcd, 0x10, 0x21, 0xec, 0x1e, 0x56, 0x78, 0x44,
	0x24, 0xaa, 0xed, 0x3e, 0xa6, 0x76, 0x2c, 0x3b, 0x2e, 0xc2, 0x07, 0x51, 0xbc, 0x23, 0x42, 0x11,
	0xb5, 0x87, 0x91, 0xc6, 0xa1, 0xc8, 0x18, 0xf1, 0x28, 0x79, 0x39, 0xb6, 0xbe, 0xc7, 0x99, 0xcb,
	0x11, 0x76, 0x14, 0x25, 0x5b, 0xb2, 0x97, 0x3c, 0x89, 0x52, 0x48, 0xb6, 0x92, 0x6a, 0x64, 0x7a,
	0xe8, 0x8a, 0x8f, 0x22, 0x85, 0x63, 0xaf, 0xfd, 0x28, 0x92, 0x9c, 0x70, 0xd8, 0xd3, 0x48, 0xdb,
	0x94, 0x7f, 0x3f, 0x8e, 0x28, 0x13, 0x4d, 0xf1, 0x93, 0xc8, 0x02, 0xa1, 0x7a, 0x02, 0x71, 0x1c,
	0xa7, 0x32, 0x76, 0x44, 0xf2, 0x69, 0x94, 0xca, 0x71, 0x93, 0x24, 0xb5, 0xc8, 0xc6, 0xa8, 0x39,
	0x7e, 0x56, 0xfb, 0x27, 0x05, 0x76, 0xe5, 0xd7, 0x71, 0x47, 0x7c, 0x9e, 0x17, 0xc2, 0xbb, 0x67,
	0xad, 0x76, 0x9b, 0x39, 0xba, 0x8d, 0xac, 0xd4, 0xa0, 0x1d, 0x2c, 0x4b, 0xcc, 0x81, 0x14, 0xa2,
	0x69, 0xb7, 0xa8, 0x81, 0x2b, 0xc5, 0x43, 0xb8, 0xbb, 0x81, 0x85, 0x35, 0x6d, 0xd3, 0x70, 0xe4,
	0x22, 0xb9, 0x09, 0x8d, 0x5b, 0x9a, 0xdc, 0x2d, 0x36, 0x61, 0x1d, 0x13, 0x77, 0x8b, 0x47, 0x70,
	0x6f, 0x23, 0xab, 0xe9, 0x38, 0x66, 0x87, 0x6c, 0xd5, 0x7e, 0xa3, 0x00, 0x91, 0xda, 0xcb, 0x56,
	0x22, 0xc6, 0xee, 0x4a, 0xa2, 0x1c, 0x0a, 0x72, 0xb4, 0x62, 0x2f, 0x22, 0x37, 0x70, 0xa9, 0xdf,
	0x80, 0x44, 0x87, 0xcb, 0x06, 0xac, 0x68, 0x4f, 0xe0, 0xe1, 0x06, 0x8a, 0x7a, 0xcf, 0xa6, 0x21,
	0x89, 0x9a, 0x50, 0x2b, 0x2b, 0xa4, 0xd9, 0x7a, 0x45, 0x72, 0xda, 0x63, 0xb8, 0xff, 0x7d, 0x22,
	0x90, 0x20, 0x5f, 0x7b, 0x06, 0x45, 0x5a, 0x77, 0xa7, 0x73, 0xa1, 0xef, 0x3e, 0x94, 0xea, 0x7a,
	0xc7, 0x92, 0x44, 0x5f, 0x92, 0x1b, 0x69, 0xc0, 0x57, 0x44, 0xa9, 0x59, 0x50, 0x4a, 0x7e, 0x42,
	0xba, 0x05, 0xc4, 0x6a, 0xeb, 0x17, 0xd4, 0x4e, 0xad, 0x16, 0x87, 0xa0, 0x25, 0xa1, 0xf2, 0xb7,
	0x7c, 0x62, 0xa4, 0xa8, 0xad, 0x3a, 0x51, 0x6b, 0xbf, 0x80, 0x5d, 0x6a, 0x7b, 0x13, 0xde, 0xe5,
	0xef, 0x85, 0x48, 0x0c, 0x2e, 0xb3, 0xcd, 0x36, 0x65, 0x5d, 0xfa, 0x2a, 0x25, 0x76, 0x03, 0x06,
	0xbb, 0x0d, 0x51, 0x70, 0x1e, 0x65, 0x31, 0xb2, 0x13, 0x11, 0xb5, 0x76, 0x04, 0x3b, 0xf1, 0xbf,
	0xca, 0x30, 0xb1, 0x99, 0x6d, 0xf6, 0x8c, 0x06, 0x33, 0x2d, 0x26, 0xfc, 0x42, 0x94, 0xda, 0x5b,
	0x28, 0xd2, 0xae, 0xb7, 0x9c, 0x74, 0x27, 0x5e, 0x80, 0x16, 0xe3, 0x7a, 0xc7, 0xba, 0x6d, 0xd3,
	0x61, 0x5f, 0x49, 0x17, 0xac, 0x00, 0xcf, 0xe5, 0x50, 0x58, 0x01, 0x7e, 0x42, 0xd4, 0x34, 0xe0,
	0x6b, 0x92, 0x4b, 0x03, 0x7e, 0x4a, 0xf2, 0x69, 0xc0, 0xff, 0x23, 0x85, 0xda, 0xef, 0x41, 0x59,
	0xae, 0x8e, 0x81, 0x27, 0x1d, 0x19, 0xad, 0x84, 0x8e, 0x69, 0xaf, 0x16, 0x48, 0x91, 0xe9, 0x69,
	0xb0, 0xec, 0x00, 0x44, 0xad, 0x79, 0x70, 0x10, 0x4b, 0x88, 0xff, 0x9b, 0x74, 0x1f, 0xee, 0xc4,
	0xe4, 0x0d, 0xdd, 0x89, 0xf6, 0x4e, 0xdd, 0xd1, 0xc9, 0x0d, 0x4c, 0x95, 0x0d, 0x48, 0x8b, 0xda,
	0x75, 0x6a, 0x38, 0x44, 0xc1, 0xda, 0xd9, 0x80, 0xef, 0x98, 0x8d, 0x56, 0xf3, 0x82, 0xa8, 0xb5,
	0x4e, 0x94, 0xdf, 0xf5, 0xe1, 0xc8, 0x9c, 0xcb, 0xfc, 0x7e, 0x08, 0x77, 0x65, 0x72, 0xd5, 0x9b,
	0xa7, 0xcc, 0xb4, 0x9c, 0x48, 0xc7, 0x8e, 0x79, 0x1e, 0x86, 0x65, 0x03, 0xba, 0x4b, 0x1d, 0xa2,
	0xd6, 0xfe, 0x51, 0x81, 0x32, 0xca, 0x9b, 0x99, 0x73, 0x3e, 0x13, 0xc2, 0xee, 0xc0, 0xcd, 0xee,
	0x59, 0xcb, 0x60, 0xa6, 0x45, 0x8d, 0x54, 0xdc, 0xe5, 0x2d, 0x49, 0x84, 0x08, 0x75, 0x9b, 0x9e,
	0xd3, 0x36, 0x51, 0xb0, 0xa8, 0x33, 0xe8, 0xf3, 0x96, 0x15, 0x62, 0xc5, 0xab, 0x32, 0x83, 0x3d,
	0xb5, 0xf5, 0x06, 0xce, 0xee, 0xf5, 0xfb, 0x7e, 0x8e, 0x88, 0x3c, 0x3a, 0x2a, 0x83, 0x10, 0x47,
	0xa7, 0x55, 0x3f, 0xa3, 0x0e, 0x29, 0xd4, 0x5e, 0xc3, 0x9e, 0xc8, 0x58, 0x7a, 0xc5, 0x67, 0x41,
	0x94, 0xb3, 0x42, 0x25, 0x7a, 0x4e, 0x0d, 0x27, 0xa5, 0xfb, 0x63, 0xb8, 0x9f, 0xc5, 0x84, 0x25,
	0x80, 0xd2, 0xe5, 0xbb, 0x3f, 0x4b, 0x20, 0x7c, 0xd6, 0xb3, 0x88, 0x5a, 0xfb, 0x35, 0xb6, 0xc4,
	0xe4, 0xb7, 0x31, 0xec, 0x6f, 0xe2, 0x95, 0xc6, 0x2c, 0x1b, 0x83, 0xe5, 0x5c, 0x84, 0x36, 0x99,
	0xed, 0x86, 0xf4, 0xd4, 0x46, 0xb4, 0x30, 0x4c, 0x11, 0xcd, 0x62, 0x13, 0x5a, 0x2e, 0x99, 0xaa,
	0x68, 0x16, 0x9b, 0xf0, 0xe1, 0xc2, 0x99, 0xab, 0x5d, 0x87, 0xb5, 0x7a, 0xb2, 0xbc, 0xce, 0xd4,
	0xea, 0x49, 0x2f, 0xad, 0xc9, 0x06, 0x4c, 0xa8, 0x04, 0xce, 0xfc, 0x0c, 0x26, 0xba, 0x7f, 0x55,
	0xc6, 0x31, 0x2a, 0xbe, 0xfa, 0x1b, 0x00, 0x7a, 0xee, 0x4e, 0x96, 0x3c, 0x7a, 0x6a, 0x52, 0xb9,
	0xe3, 0x84, 0x09, 0x11, 0x76, 0x4c, 0x51, 0xe0, 0x09, 0x38, 0xf6, 0x38, 0xb5, 0x16, 0x80, 0x46,
	0x5f, 0x70, 0xdf, 0x6b, 0xcd, 0x86, 0x5e, 0x5d, 0x7c, 0x48, 0x70, 0xdc, 0x91, 0xb4, 0x56, 0x6c,
	0x0b, 0x2d, 0xa3, 0x69, 0xb2, 0xfa, 0x0b, 0xdd, 0x38, 0xc5, 0xd7, 0x58, 0x9c, 0x58, 0xc2, 0x5d,
	0x9b, 0x08, 0xba, 0x8e, 0x6e, 0x87, 0xc3, 0x66, 0x1d, 0xaf, 0xbf, 0xd4, 0xcf, 0xa8, 0x41, 0x72,
	0xb5, 0x27, 0xb0, 0x4d, 0x4f, 0xc5, 0x27, 0x43, 0xad, 0x08, 0x05, 0x1a, 0xb6, 0xaa, 0x12, 0x6c,
	0xd3, 0xb8, 0x37, 0x4d, 0x60, 0x2f, 0xf3, 0xff, 0x60, 0x99, 0xae, 0xed, 0x76, 0xa2, 0x02, 0xc3,
	0x4c, 0x3a, 0x82, 0x07, 0x59, 0x4c, 0x74, 0xee, 0xe8, 0xa7, 0x61, 0x78, 0x37, 0x53, 0x60, 0xbb,
	0x27, 0x6a, 0xed, 0x57, 0x2a, 0x1c, 0xf0, 0x30, 0x9b, 0xc4, 0x37, 0xd9, 0xe8, 0xc6, 0x38, 0xe4,
	0xcc, 0xb1, 0xd8, 0x09, 0x3b, 0xd1, 0x4f, 0x5b, 0x06, 0xb9, 0x81, 0x05, 0x92, 0xc1, 0xe0, 0x02,
	0x4d, 0x6e, 0x60, 0xce, 0x66, 0x10, 0x0e, 0xed, 0x58, 0x6d, 0x5d, 0x3c, 0x6e, 0xd7, 0xb9, 0x7a,
	0xbd, 0x56, 0x43, 0x46, 0x37, 0x83, 0xc0, 0x7d, 0xb8, 0xad, 0x5b, 0xf2, 0xf3, 0x55, 0x06, 0xd7,
	0xb5, 0xf4, 0x97, 0x58, 0x73, 0x1d, 0xac, 0xc8, 0x43, 0xd0, 0x32, 0xe8, 0x8e, 0xfe, 0x4a, 0x3e,
	0xf8, 0x53, 0x70, 0xca, 0x4e, 0x28, 0xea, 0x3e, 0x58, 0xe3, 0xa0, 0x82, 0x83, 0x8b, 0x4f, 0x75,
	0x3e, 0x94, 0x85, 0x1b, 0xf0, 0x81, 0x72, 0x32, 0x0e, 0x16, 0xb1, 0xca, 0xe2, 0x7d, 0x70, 0xd2,
	0x72, 0x30, 0x83, 0x5a, 0x0d, 0x39, 0xc8, 0xd2, 0x88, 0xb6, 0x59, 0x3f, 0x93, 0x5f, 0x34, 0xd2,
	0xf0, 0x93, 0x96, 0x58, 0x3f, 0x22, 0x7d, 0x62, 0x78, 0xd8, 0x3d, 0x1f, 0xd7, 0x38, 0x14, 0x79,
	0xc7, 0x1d, 0x4f, 0xc4, 0xa3, 0x68, 0x17, 0x76, 0x3a, 0x7a, 0xab, 0xcd, 0x0c, 0xfa, 0x92, 0xdc,
	0xc0, 0x55, 0x49, 0x9c, 0x6c, 0xaa, 0x37, 0xe4, 0x8b, 0x5a, 0x1c, 0x69, 0xc7, 0x72, 0x2e, 0xe4,
	0x8b, 0x5a, 0x9c, 0x1b, 0xb4, 0x4d, 0x0a, 0xda, 0x5d, 0xd0, 0xf0, 0x09, 0x28, 0x20, 0x67, 0x94,
	0x5a, 0xd2, 0x43, 0xbf, 0xfc, 0x8b, 0xbf, 0x52, 0xd0, 0xb4, 0xff, 0x0a, 0x00, 0x00, 0xff, 0xff,
	0xff, 0xd1, 0xe7, 0x07, 0xa8, 0x25, 0x00, 0x00,
}
