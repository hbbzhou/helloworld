
//安装svn
#if


1.环境
centos6.4

2.安装svn
yum -y install subversion

3.配置

建立版本库目录
mkdir /var/www/svndata

svnserve -d -r /var/www/svndata

4.建立版本库

创建一个新的xx项目
svnadmin create /var/www/svndata/hbb_python

配置允许用户hbb访问
cd /var/www/svndata/hbb_python/conf

vi svnserve.conf
anon-access=none
auth-access=write
password-db=passwd

注：修改的文件前面不能有空格，否则启动svn server出错

vi passwd
[users]
#<用户1> = <密码1>
#<用户2> = <密码2>
jiqing=123456

5.客户端连接
svn co svn://ip/hbb_python
用户名:jiqing

密码：123456

#endif

//安装redis
#if

首先为yum添加epel源：yum install epel-release回车
再次：yum install redis回车

#endif

//安装python redis
#if
yum install python-redis

#endif

//安装 python mysql
#if 
yum install MySQL-python
#endif


//安装 go
#if

sudo yum install golang

#endif

//安装 阿帕奇
#if

####linux yum安装 Apache：--------
yum install httpd

##启动服务
/etc/init.d/httpd start

##验证是否安装成功
现在打开http://ip地址，看看有没有Apache的默认页面出来了?如果有就对了。

##安装目录介绍
Apache默认将网站的根目录指向/var/www/html 目录 
默认的主配置文件是/etc/httpd/conf/httpd.conf
配置存储在的/etc/httpd/conf.d/目录
--------------------------------

####linux 设置Apache开机自启动：--
chkconfig httpd on
------------------------------------ 

#endif

//安装protobuff
#if 
1.下载安装包
https://github.com/google/protobuf/releases?after=v3.0.0-alpha-4.1 找到相应的版本下载

2.解压安装包
#tar -zxf protobuf-2.5.0.tar.gz

3.创建安装路径
#mkdir /usr/local/protobuf-2.5.0
#cd /usr/local/protobuf-2.5.0

4.配置安装

#/opt/protobuf-2.5.0/configure -prefix=/usr/local/protobuf-2.5.0

5.编译
#make -j8

如出现错误，缺少GLIBCXX_3.4.21，或更高版本；说明装了新版本gcc（gcc5.3.0）。
找到安装路径，执行下面语句，再次编译
#ln -s /usr/local/gcc-5.3.0/lib64/libstdc++.so.6.0.21 /usr/lib64/libstdc++.so.6

6.安装检查
#make check

7.安装
#make install

8、链接库
如需要链接库/usr/local/protobuf-2.5.0/lib/libprotobuf.a

#endif 


//编译升级gcc
#if
endif

百度 [编译安装 gcc8.1]

//拷贝gcc升级
#if

:gcc安装
将 gcc-8.1.zip 拷贝到 /usr/local/
unzip gcc-8.1.zip
--
sudo vim /etc/profile
export PATH="/usr/local/gcc-8.1/bin:$PATH"
export LD_LIBRARY_PATH="/usr/local/gcc-8.1/lib:/usr/local/gcc-8.1/lib64:$LD_LIBRARY_PATH:"
--
@--测试
gcc -v
g++ -v
@---结果///////////////////////
Using built-in specs.
COLLECT_GCC=gcc
Target: x86_64-pc-linux-gnu
Configured with: ../gcc-8.1.0/configure --prefix=/usr/local/gcc-8.1 --enable-threads=posix --disable-checking --disable-multilib
Thread model: posix
gcc version 8.1.0 (GCC) 
////////////////////////



:gdb安装
将 gdb-8.1.zip 拷贝到 /usr/local/
unzip gdb-8.1.zip
--
sudo vim /etc/profile
export PATH="/usr/local/gdb-8.1/bin:$PATH"
export LD_LIBRARY_PATH="/usr/local/gdb-8.1/lib:$LD_LIBRARY_PATH:"

@--测试
gdb -v
@---结果///////////////////////
GNU gdb (GDB) 8.1
Copyright (C) 2018 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.  Type "show copying"
and "show warranty" for details.
This GDB was configured as "x86_64-pc-linux-gnu".
Type "show configuration" for configuration details.
For bug reporting instructions, please see:
<http://www.gnu.org/software/gdb/bugs/>.
Find the GDB manual and other documentation resources online at:
<http://www.gnu.org/software/gdb/documentation/>.
For help, type "help".
Type "apropos word" to search for commands related to "word".
///////////////////////////////////////////////


#endif












